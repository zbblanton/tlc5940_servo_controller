

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Jun 19 00:14:44 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     _CCP1CON	set	4029
    21  0000                     _CCPR1L	set	4030
    22  0000                     _INTCONbits	set	4082
    23  0000                     _LATDbits	set	3980
    24  0000                     _PIE1bits	set	3997
    25  0000                     _PIR1bits	set	3998
    26  0000                     _PORTA	set	3968
    27  0000                     _PORTB	set	3969
    28  0000                     _PORTC	set	3970
    29  0000                     _PORTD	set	3971
    30  0000                     _PORTE	set	3972
    31  0000                     _PR2	set	4043
    32  0000                     _SSPBUF	set	4041
    33  0000                     _SSPCON1bits	set	4038
    34  0000                     _SSPSTATbits	set	4039
    35  0000                     _T2CON	set	4042
    36  0000                     _T2CONbits	set	4042
    37  0000                     _TRISA	set	3986
    38  0000                     _TRISB	set	3987
    39  0000                     _TRISC	set	3988
    40  0000                     _TRISCbits	set	3988
    41  0000                     _TRISD	set	3989
    42  0000                     _TRISE	set	3990
    43                           
    44                           	psect	intcode_body
    45  00016C                     __pintcode_body:
    46                           	opt stack 0
    47                           
    48                           ; #config settings
    49  00016C                     int_func:
    50                           	opt stack 28
    51  00016C  0006               	pop		; remove dummy address from shadow register refresh
    52  00016E  CFEA F004          	movff	fsr0h,??_blank_pulse+3
    53  000172  CFE1 F005          	movff	fsr1l,??_blank_pulse+4
    54  000176  CFE2 F006          	movff	fsr1h,??_blank_pulse+5
    55  00017A  CFD9 F007          	movff	fsr2l,??_blank_pulse+6
    56  00017E  CFDA F008          	movff	fsr2h,??_blank_pulse+7
    57  000182  CFF3 F009          	movff	prodl,??_blank_pulse+8
    58  000186  CFF4 F00A          	movff	prodh,??_blank_pulse+9
    59  00018A  CFF6 F00B          	movff	tblptrl,??_blank_pulse+10
    60  00018E  CFF7 F00C          	movff	tblptrh,??_blank_pulse+11
    61  000192  CFF8 F00D          	movff	tblptru,??_blank_pulse+12
    62  000196  CFF5 F00E          	movff	tablat,??_blank_pulse+13
    63                           
    64                           ;main.c: 38: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF)
    65  00019A  B29D               	btfsc	3997,1,c	;volatile
    66  00019C  A29E               	btfss	3998,1,c	;volatile
    67  00019E  D012               	goto	i2l97
    68                           
    69                           ;main.c: 39: {
    70                           ;main.c: 40: if(count >= 125)
    71  0001A0  5026               	movf	_count+1,w,c	;volatile
    72  0001A2  0A80               	xorlw	128
    73  0001A4  0F80               	addlw	-128
    74  0001A6  0E7D               	movlw	125
    75  0001A8  B4D8               	btfsc	status,2,c
    76  0001AA  5C25               	subwf	_count,w,c	;volatile
    77  0001AC  A0D8               	btfss	status,0,c
    78  0001AE  D007               	goto	i2l833
    79                           
    80                           ;main.c: 41: {
    81                           ;main.c: 42: LATDbits.LD2 = 1;
    82  0001B0  848C               	bsf	3980,2,c	;volatile
    83                           
    84                           ;main.c: 43: _delay((unsigned long)((1)*(8000000/4000000.0)));
    85  0001B2  D000               	nop2		;2 cycle nop
    86                           
    87                           ;main.c: 44: LATDbits.LD2 = 0;
    88  0001B4  948C               	bcf	3980,2,c	;volatile
    89                           
    90                           ;main.c: 45: count = 0;
    91  0001B6  0E00               	movlw	0
    92  0001B8  6E26               	movwf	_count+1,c	;volatile
    93  0001BA  0E00               	movlw	0
    94  0001BC  6E25               	movwf	_count,c	;volatile
    95  0001BE                     i2l833:
    96                           
    97                           ;main.c: 46: }
    98                           ;main.c: 47: count++;
    99  0001BE  4A25               	infsnz	_count,f,c	;volatile
   100  0001C0  2A26               	incf	_count+1,f,c	;volatile
   101                           
   102                           ;main.c: 48: PIR1bits.TMR2IF = 0;
   103  0001C2  929E               	bcf	3998,1,c	;volatile
   104  0001C4                     i2l97:
   105  0001C4  C00E  FFF5         	movff	??_blank_pulse+13,tablat
   106  0001C8  C00D  FFF8         	movff	??_blank_pulse+12,tblptru
   107  0001CC  C00C  FFF7         	movff	??_blank_pulse+11,tblptrh
   108  0001D0  C00B  FFF6         	movff	??_blank_pulse+10,tblptrl
   109  0001D4  C00A  FFF4         	movff	??_blank_pulse+9,prodh
   110  0001D8  C009  FFF3         	movff	??_blank_pulse+8,prodl
   111  0001DC  C008  FFDA         	movff	??_blank_pulse+7,fsr2h
   112  0001E0  C007  FFD9         	movff	??_blank_pulse+6,fsr2l
   113  0001E4  C006  FFE2         	movff	??_blank_pulse+5,fsr1h
   114  0001E8  C005  FFE1         	movff	??_blank_pulse+4,fsr1l
   115  0001EC  C004  FFEA         	movff	??_blank_pulse+3,fsr0h
   116  0001F0  C003  FFE9         	movff	??_blank_pulse+2,fsr0l
   117  0001F4  C002  FFFB         	movff	??_blank_pulse+1,pclatu
   118  0001F8  C001  FFFA         	movff	??_blank_pulse,pclath
   119  0001FC  0011               	retfie		f
   120  0001FE                     __end_of_blank_pulse:
   121                           	opt stack 0
   122  0000                     pclatu	equ	0xFFB
   123                           pclath	equ	0xFFA
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           prodh	equ	0xFF4
   129                           prodl	equ	0xFF3
   130                           fsr0h	equ	0xFEA
   131                           fsr0l	equ	0xFE9
   132                           fsr1h	equ	0xFE2
   133                           fsr1l	equ	0xFE1
   134                           fsr2h	equ	0xFDA
   135                           fsr2l	equ	0xFD9
   136                           status	equ	0xFD8
   137                           
   138                           	psect	cinit
   139  000306                     __pcinit:
   140                           	opt stack 0
   141  000306                     start_initialization:
   142                           	opt stack 0
   143  000306                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to COMRAM (18 bytes)
   147  000306  EE00  F015         	lfsr	0,__pbssCOMRAM
   148  00030A  0E12               	movlw	18
   149  00030C                     clear_0:
   150  00030C  6AEE               	clrf	postinc0,c
   151  00030E  06E8               	decf	wreg,f,c
   152  000310  E1FD               	bnz	clear_0
   153  000312                     end_of_initialization:
   154                           	opt stack 0
   155  000312                     __end_of__initialization:
   156                           	opt stack 0
   157  000312  0100               	movlb	0
   158  000314  EFFF  F000         	goto	_main	;jump to C main() function
   159                           pclatu	equ	0xFFB
   160                           pclath	equ	0xFFA
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           prodh	equ	0xFF4
   166                           prodl	equ	0xFF3
   167                           postinc0	equ	0xFEE
   168                           fsr0h	equ	0xFEA
   169                           fsr0l	equ	0xFE9
   170                           wreg	equ	0xFE8
   171                           fsr1h	equ	0xFE2
   172                           fsr1l	equ	0xFE1
   173                           fsr2h	equ	0xFDA
   174                           fsr2l	equ	0xFD9
   175                           status	equ	0xFD8
   176                           
   177                           	psect	bssCOMRAM
   178  000015                     __pbssCOMRAM:
   179                           	opt stack 0
   180  000015                     _tlc_servo:
   181                           	opt stack 0
   182  000015                     	ds	16
   183  000025                     _count:
   184                           	opt stack 0
   185  000025                     	ds	2
   186                           pclatu	equ	0xFFB
   187                           pclath	equ	0xFFA
   188                           tblptru	equ	0xFF8
   189                           tblptrh	equ	0xFF7
   190                           tblptrl	equ	0xFF6
   191                           tablat	equ	0xFF5
   192                           prodh	equ	0xFF4
   193                           prodl	equ	0xFF3
   194                           postinc0	equ	0xFEE
   195                           fsr0h	equ	0xFEA
   196                           fsr0l	equ	0xFE9
   197                           wreg	equ	0xFE8
   198                           fsr1h	equ	0xFE2
   199                           fsr1l	equ	0xFE1
   200                           fsr2h	equ	0xFDA
   201                           fsr2l	equ	0xFD9
   202                           status	equ	0xFD8
   203                           
   204                           	psect	cstackCOMRAM
   205  000001                     __pcstackCOMRAM:
   206                           	opt stack 0
   207  000001                     ??_blank_pulse:
   208  000001                     
   209                           ; 2 bytes @ 0x0
   210  000001                     	ds	14
   211  00000F                     ??_delay_sec:
   212  00000F                     serial_send_data@data:
   213                           	opt stack 0
   214  00000F                     tlc_set@value:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0xE
   218  00000F                     	ds	1
   219  000010                     ??_tlc_init:
   220  000010                     ??_tlc_update:
   221  000010                     tlc_set@tlc_servo_number:
   222                           	opt stack 0
   223  000010                     delay_sec@i:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0xF
   227  000010                     	ds	1
   228  000011                     tlc_init@i:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x10
   232  000011                     	ds	1
   233  000012                     tlc_init@i_158:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x11
   237  000012                     	ds	1
   238  000013                     tlc_update@counter:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x12
   242  000013                     	ds	1
   243  000014                     tlc_update@i:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x13
   247  000014                     	ds	1
   248  000015                     pclatu	equ	0xFFB
   249                           pclath	equ	0xFFA
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           prodh	equ	0xFF4
   255                           prodl	equ	0xFF3
   256                           postinc0	equ	0xFEE
   257                           fsr0h	equ	0xFEA
   258                           fsr0l	equ	0xFE9
   259                           wreg	equ	0xFE8
   260                           fsr1h	equ	0xFE2
   261                           fsr1l	equ	0xFE1
   262                           fsr2h	equ	0xFDA
   263                           fsr2l	equ	0xFD9
   264                           status	equ	0xFD8
   265                           
   266                           ; 0 bytes @ 0x14
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 79 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  2  105[COMRAM] int 
   279 ;; Registers used:
   280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   286 ;;      Params:         0       0       0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0
   289 ;;      Totals:         0       0       0       0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called:    3
   292 ;; This function calls:
   293 ;;		_TMR2_init
   294 ;;		_delay_sec
   295 ;;		_spi_init
   296 ;;		_tlc_init
   297 ;;		_tlc_set
   298 ;;		_tlc_update
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305  0001FE                     __ptext0:
   306                           	opt stack 0
   307  0001FE                     _main:
   308                           	opt stack 28
   309                           
   310                           ;main.c: 82: TRISD = 0b00000000;
   311                           
   312                           ;incstack = 0
   313  0001FE  0E00               	movlw	0
   314  000200  6E95               	movwf	3989,c	;volatile
   315                           
   316                           ;main.c: 83: PORTD = 0b00000000;
   317  000202  0E00               	movlw	0
   318  000204  6E83               	movwf	3971,c	;volatile
   319                           
   320                           ;main.c: 84: TRISB = 0b00100000;
   321  000206  0E20               	movlw	32
   322  000208  6E93               	movwf	3987,c	;volatile
   323                           
   324                           ;main.c: 85: PORTB = 0b00000000;
   325  00020A  0E00               	movlw	0
   326  00020C  6E81               	movwf	3969,c	;volatile
   327                           
   328                           ;main.c: 86: TRISA = 0b00001111;
   329  00020E  0E0F               	movlw	15
   330  000210  6E92               	movwf	3986,c	;volatile
   331                           
   332                           ;main.c: 87: PORTA = 0b00001111;
   333  000212  0E0F               	movlw	15
   334  000214  6E80               	movwf	3968,c	;volatile
   335                           
   336                           ;main.c: 88: TRISE = 0b00001000;
   337  000216  0E08               	movlw	8
   338  000218  6E96               	movwf	3990,c	;volatile
   339                           
   340                           ;main.c: 89: PORTE = 0b00000000;
   341  00021A  0E00               	movlw	0
   342  00021C  6E84               	movwf	3972,c	;volatile
   343                           
   344                           ;main.c: 91: TMR2_init();
   345  00021E  EC5D  F001         	call	_TMR2_init	;wreg free
   346                           
   347                           ;main.c: 92: count = 0;
   348  000222  0E00               	movlw	0
   349  000224  6E26               	movwf	_count+1,c	;volatile
   350  000226  0E00               	movlw	0
   351  000228  6E25               	movwf	_count,c	;volatile
   352                           
   353                           ;main.c: 94: PIE1bits.TMR2IE = 1;
   354  00022A  829D               	bsf	3997,1,c	;volatile
   355                           
   356                           ;main.c: 95: INTCONbits.PEIE = 1;
   357  00022C  8CF2               	bsf	intcon,6,c	;volatile
   358                           
   359                           ;main.c: 96: INTCONbits.GIE = 1;
   360  00022E  8EF2               	bsf	intcon,7,c	;volatile
   361                           
   362                           ;main.c: 97: T2CONbits.TMR2ON = 0;
   363  000230  94CA               	bcf	4042,2,c	;volatile
   364                           
   365                           ;main.c: 99: spi_init();
   366  000232  EC78  F001         	call	_spi_init	;wreg free
   367                           
   368                           ;main.c: 102: tlc_init();
   369  000236  EC0E  F000         	call	_tlc_init	;wreg free
   370                           
   371                           ;main.c: 103: tlc_update();
   372  00023A  EC66  F000         	call	_tlc_update	;wreg free
   373                           
   374                           ;main.c: 105: T2CONbits.TMR2ON = 1;
   375  00023E  84CA               	bsf	4042,2,c	;volatile
   376  000240                     l859:
   377                           
   378                           ;main.c: 107: {
   379                           ;main.c: 108: LATDbits.LD3 = 1;
   380  000240  868C               	bsf	3980,3,c	;volatile
   381                           
   382                           ;main.c: 109: delay_sec();
   383  000242  EC45  F001         	call	_delay_sec	;wreg free
   384                           
   385                           ;main.c: 110: LATDbits.LD3 = 0;
   386  000246  968C               	bcf	3980,3,c	;volatile
   387                           
   388                           ;main.c: 111: delay_sec();
   389  000248  EC45  F001         	call	_delay_sec	;wreg free
   390                           
   391                           ;main.c: 112: tlc_set(0, 0);
   392  00024C  0E00               	movlw	0
   393  00024E  6E0F               	movwf	tlc_set@value,c
   394  000250  0E00               	movlw	0
   395  000252  EC6B  F001         	call	_tlc_set
   396                           
   397                           ;main.c: 113: tlc_update();
   398  000256  EC66  F000         	call	_tlc_update	;wreg free
   399                           
   400                           ;main.c: 114: delay_sec();
   401  00025A  EC45  F001         	call	_delay_sec	;wreg free
   402                           
   403                           ;main.c: 115: delay_sec();
   404  00025E  EC45  F001         	call	_delay_sec	;wreg free
   405                           
   406                           ;main.c: 116: delay_sec();
   407  000262  EC45  F001         	call	_delay_sec	;wreg free
   408                           
   409                           ;main.c: 117: delay_sec();
   410  000266  EC45  F001         	call	_delay_sec	;wreg free
   411                           
   412                           ;main.c: 119: tlc_set(0, 180);
   413  00026A  0EB4               	movlw	180
   414  00026C  6E0F               	movwf	tlc_set@value,c
   415  00026E  0E00               	movlw	0
   416  000270  EC6B  F001         	call	_tlc_set
   417                           
   418                           ;main.c: 120: tlc_update();
   419  000274  EC66  F000         	call	_tlc_update	;wreg free
   420                           
   421                           ;main.c: 121: delay_sec();
   422  000278  EC45  F001         	call	_delay_sec	;wreg free
   423                           
   424                           ;main.c: 122: delay_sec();
   425  00027C  EC45  F001         	call	_delay_sec	;wreg free
   426                           
   427                           ;main.c: 123: delay_sec();
   428  000280  EC45  F001         	call	_delay_sec	;wreg free
   429                           
   430                           ;main.c: 124: delay_sec();
   431  000284  EC45  F001         	call	_delay_sec	;wreg free
   432  000288  D7DB               	goto	l859
   433  00028A                     __end_of_main:
   434                           	opt stack 0
   435                           pclatu	equ	0xFFB
   436                           pclath	equ	0xFFA
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           prodh	equ	0xFF4
   442                           prodl	equ	0xFF3
   443                           intcon	equ	0xFF2
   444                           postinc0	equ	0xFEE
   445                           fsr0h	equ	0xFEA
   446                           fsr0l	equ	0xFE9
   447                           wreg	equ	0xFE8
   448                           fsr1h	equ	0xFE2
   449                           fsr1l	equ	0xFE1
   450                           fsr2h	equ	0xFDA
   451                           fsr2l	equ	0xFD9
   452                           status	equ	0xFD8
   453                           
   454 ;; *************** function _tlc_update *****************
   455 ;; Defined at:
   456 ;;		line 89 in file "tlc5940.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  i               1   19[COMRAM] unsigned char 
   461 ;;  counter         1   18[COMRAM] unsigned char 
   462 ;; Return value:  Size  Location     Type
   463 ;;		None               void
   464 ;; Registers used:
   465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   471 ;;      Params:         0       0       0       0       0       0       0
   472 ;;      Locals:         2       0       0       0       0       0       0
   473 ;;      Temps:          3       0       0       0       0       0       0
   474 ;;      Totals:         5       0       0       0       0       0       0
   475 ;;Total ram usage:        5 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; Hardware stack levels required when called:    2
   478 ;; This function calls:
   479 ;;		_serial_send_data
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text1
   486  0000CC                     __ptext1:
   487                           	opt stack 0
   488  0000CC                     _tlc_update:
   489                           	opt stack 28
   490                           
   491                           ;tlc5940.c: 92: _delay((unsigned long)((1)*(8000000/4000000.0)));
   492                           
   493                           ;incstack = 0
   494  0000CC  D000               	nop2		;2 cycle nop
   495                           
   496                           ;tlc5940.c: 94: T2CONbits.TMR2ON = 0;
   497  0000CE  94CA               	bcf	4042,2,c	;volatile
   498                           
   499                           ;tlc5940.c: 95: LATDbits.LD1 = 0;
   500  0000D0  928C               	bcf	3980,1,c	;volatile
   501                           
   502                           ;tlc5940.c: 96: LATDbits.LD0 = 0;
   503  0000D2  908C               	bcf	3980,0,c	;volatile
   504                           
   505                           ;tlc5940.c: 97: LATDbits.LD2 = 0;
   506  0000D4  948C               	bcf	3980,2,c	;volatile
   507                           
   508                           ;tlc5940.c: 99: char counter = 0;
   509  0000D6  0E00               	movlw	0
   510  0000D8  6E13               	movwf	tlc_update@counter,c
   511                           
   512                           ;tlc5940.c: 100: for(char i = 0; i < 8; i++)
   513  0000DA  0E00               	movlw	0
   514  0000DC  6E14               	movwf	tlc_update@i,c
   515  0000DE  D03C               	goto	L1
   516  0000E0                     l769:
   517                           
   518                           ;tlc5940.c: 101: {
   519                           ;tlc5940.c: 102: serial_send_data(tlc_servo[i + counter]>>4);
   520  0000E0  5013               	movf	tlc_update@counter,w,c
   521  0000E2  C014  F010         	movff	tlc_update@i,??_tlc_update
   522  0000E6  6A11               	clrf	(??_tlc_update+1)& (0+255),c
   523  0000E8  2610               	addwf	??_tlc_update,f,c
   524  0000EA  0E00               	movlw	0
   525  0000EC  2211               	addwfc	??_tlc_update+1,f,c
   526  0000EE  0E15               	movlw	low _tlc_servo
   527  0000F0  2410               	addwf	??_tlc_update,w,c
   528  0000F2  6ED9               	movwf	fsr2l,c
   529  0000F4  0E00               	movlw	high _tlc_servo
   530  0000F6  2011               	addwfc	??_tlc_update+1,w,c
   531  0000F8  6EDA               	movwf	fsr2h,c
   532  0000FA  50DF               	movf	indf2,w,c
   533  0000FC  6E12               	movwf	(??_tlc_update+2)& (0+255),c
   534  0000FE  3812               	swapf	??_tlc_update+2,w,c
   535  000100  0B0F               	andlw	15
   536  000102  EC8C  F001         	call	_serial_send_data
   537                           
   538                           ;tlc5940.c: 103: serial_send_data(tlc_servo[i + counter]<<4);
   539  000106  5013               	movf	tlc_update@counter,w,c
   540  000108  C014  F010         	movff	tlc_update@i,??_tlc_update
   541  00010C  6A11               	clrf	(??_tlc_update+1)& (0+255),c
   542  00010E  2610               	addwf	??_tlc_update,f,c
   543  000110  0E00               	movlw	0
   544  000112  2211               	addwfc	??_tlc_update+1,f,c
   545  000114  0E15               	movlw	low _tlc_servo
   546  000116  2410               	addwf	??_tlc_update,w,c
   547  000118  6ED9               	movwf	fsr2l,c
   548  00011A  0E00               	movlw	high _tlc_servo
   549  00011C  2011               	addwfc	??_tlc_update+1,w,c
   550  00011E  6EDA               	movwf	fsr2h,c
   551  000120  50DF               	movf	indf2,w,c
   552  000122  6E12               	movwf	(??_tlc_update+2)& (0+255),c
   553  000124  3812               	swapf	??_tlc_update+2,w,c
   554  000126  0BF0               	andlw	240
   555  000128  EC8C  F001         	call	_serial_send_data
   556                           
   557                           ;tlc5940.c: 104: serial_send_data(tlc_servo[i + (counter + 1)]);
   558  00012C  5014               	movf	tlc_update@i,w,c
   559  00012E  C013  F010         	movff	tlc_update@counter,??_tlc_update
   560  000132  6A11               	clrf	(??_tlc_update+1)& (0+255),c
   561  000134  2610               	addwf	??_tlc_update,f,c
   562  000136  0E00               	movlw	0
   563  000138  2211               	addwfc	??_tlc_update+1,f,c
   564  00013A  0E01               	movlw	1
   565  00013C  2610               	addwf	??_tlc_update,f,c
   566  00013E  0E00               	movlw	0
   567  000140  2211               	addwfc	??_tlc_update+1,f,c
   568  000142  0E15               	movlw	low _tlc_servo
   569  000144  2410               	addwf	??_tlc_update,w,c
   570  000146  6ED9               	movwf	fsr2l,c
   571  000148  0E00               	movlw	high _tlc_servo
   572  00014A  2011               	addwfc	??_tlc_update+1,w,c
   573  00014C  6EDA               	movwf	fsr2h,c
   574  00014E  50DF               	movf	indf2,w,c
   575  000150  EC8C  F001         	call	_serial_send_data
   576                           
   577                           ;tlc5940.c: 105: counter++;
   578  000154  2A13               	incf	tlc_update@counter,f,c
   579  000156  2A14               	incf	tlc_update@i,f,c
   580  000158                     L1:
   581  000158  0E07               	movlw	7
   582  00015A  6414               	cpfsgt	tlc_update@i,c
   583  00015C  D7C1               	goto	l769
   584                           
   585                           ;tlc5940.c: 106: }
   586                           ;tlc5940.c: 109: _delay((unsigned long)((1)*(8000000/4000000.0)));
   587  00015E  D000               	nop2		;2 cycle nop
   588                           
   589                           ;tlc5940.c: 110: LATDbits.LD0 = 1;
   590  000160  808C               	bsf	3980,0,c	;volatile
   591                           
   592                           ;tlc5940.c: 111: _delay((unsigned long)((1)*(8000000/4000000.0)));
   593  000162  D000               	nop2		;2 cycle nop
   594                           
   595                           ;tlc5940.c: 112: LATDbits.LD0 = 0;
   596  000164  908C               	bcf	3980,0,c	;volatile
   597                           
   598                           ;tlc5940.c: 113: _delay((unsigned long)((1)*(8000000/4000000.0)));
   599  000166  D000               	nop2		;2 cycle nop
   600                           
   601                           ;tlc5940.c: 115: T2CONbits.TMR2ON = 1;
   602  000168  84CA               	bsf	4042,2,c	;volatile
   603  00016A  0012               	return	
   604  00016C                     __end_of_tlc_update:
   605                           	opt stack 0
   606                           pclatu	equ	0xFFB
   607                           pclath	equ	0xFFA
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           prodh	equ	0xFF4
   613                           prodl	equ	0xFF3
   614                           intcon	equ	0xFF2
   615                           postinc0	equ	0xFEE
   616                           fsr0h	equ	0xFEA
   617                           fsr0l	equ	0xFE9
   618                           wreg	equ	0xFE8
   619                           fsr1h	equ	0xFE2
   620                           fsr1l	equ	0xFE1
   621                           indf2	equ	0xFDF
   622                           fsr2h	equ	0xFDA
   623                           fsr2l	equ	0xFD9
   624                           status	equ	0xFD8
   625                           
   626 ;; *************** function _tlc_set *****************
   627 ;; Defined at:
   628 ;;		line 128 in file "tlc5940.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  tlc_servo_nu    1    wreg     unsigned char 
   631 ;;  value           1   14[COMRAM] unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  tlc_servo_nu    1   15[COMRAM] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;		None               void
   636 ;; Registers used:
   637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   643 ;;      Params:         1       0       0       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0
   646 ;;      Totals:         2       0       0       0       0       0       0
   647 ;;Total ram usage:        2 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text2
   658  0002D6                     __ptext2:
   659                           	opt stack 0
   660  0002D6                     _tlc_set:
   661                           	opt stack 29
   662                           
   663                           ;incstack = 0
   664                           ;tlc_set@tlc_servo_number stored from wreg
   665  0002D6  6E10               	movwf	tlc_set@tlc_servo_number,c
   666                           
   667                           ;tlc5940.c: 130: tlc_servo[tlc_servo_number] = value + 55;
   668  0002D8  5010               	movf	tlc_set@tlc_servo_number,w,c
   669  0002DA  0D01               	mullw	1
   670  0002DC  0E15               	movlw	low _tlc_servo
   671  0002DE  24F3               	addwf	prodl,w,c
   672  0002E0  6ED9               	movwf	fsr2l,c
   673  0002E2  0E00               	movlw	high _tlc_servo
   674  0002E4  20F4               	addwfc	prodh,w,c
   675  0002E6  6EDA               	movwf	fsr2h,c
   676  0002E8  500F               	movf	tlc_set@value,w,c
   677  0002EA  0F37               	addlw	55
   678  0002EC  6EDF               	movwf	indf2,c
   679  0002EE  0012               	return	
   680  0002F0                     __end_of_tlc_set:
   681                           	opt stack 0
   682                           pclatu	equ	0xFFB
   683                           pclath	equ	0xFFA
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           prodh	equ	0xFF4
   689                           prodl	equ	0xFF3
   690                           intcon	equ	0xFF2
   691                           postinc0	equ	0xFEE
   692                           fsr0h	equ	0xFEA
   693                           fsr0l	equ	0xFE9
   694                           wreg	equ	0xFE8
   695                           fsr1h	equ	0xFE2
   696                           fsr1l	equ	0xFE1
   697                           indf2	equ	0xFDF
   698                           fsr2h	equ	0xFDA
   699                           fsr2l	equ	0xFD9
   700                           status	equ	0xFD8
   701                           
   702 ;; *************** function _tlc_init *****************
   703 ;; Defined at:
   704 ;;		line 24 in file "tlc5940.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  i               1   17[COMRAM] unsigned char 
   709 ;;  i               1   16[COMRAM] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;		None               void
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   719 ;;      Params:         0       0       0       0       0       0       0
   720 ;;      Locals:         2       0       0       0       0       0       0
   721 ;;      Temps:          1       0       0       0       0       0       0
   722 ;;      Totals:         3       0       0       0       0       0       0
   723 ;;Total ram usage:        3 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    2
   726 ;; This function calls:
   727 ;;		_serial_send_data
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text3
   734  00001C                     __ptext3:
   735                           	opt stack 0
   736  00001C                     _tlc_init:
   737                           	opt stack 28
   738                           
   739                           ;tlc5940.c: 27: LATDbits.LD1 = 1;
   740                           
   741                           ;incstack = 0
   742  00001C  828C               	bsf	3980,1,c	;volatile
   743                           
   744                           ;tlc5940.c: 28: LATDbits.LD0 = 0;
   745  00001E  908C               	bcf	3980,0,c	;volatile
   746                           
   747                           ;tlc5940.c: 29: _delay((unsigned long)((2)*(8000000/4000.0)));
   748  000020  0E06               	movlw	6
   749  000022  6E10               	movwf	??_tlc_init& (0+255),c
   750  000024  0E30               	movlw	48
   751  000026                     u147:
   752  000026  2EE8               	decfsz	wreg,f,c
   753  000028  D7FE               	goto	u147
   754  00002A  2E10               	decfsz	??_tlc_init& (0+255),f,c
   755  00002C  D7FC               	goto	u147
   756  00002E  D000               	nop2	
   757                           
   758                           ;tlc5940.c: 32: for(char i = 0; i < 12; i++)
   759  000030  0E00               	movlw	0
   760  000032  6E11               	movwf	tlc_init@i,c
   761  000034  D004               	goto	L2
   762  000036                     l699:
   763                           
   764                           ;tlc5940.c: 33: {
   765                           ;tlc5940.c: 34: serial_send_data(0b11111111);
   766  000036  0EFF               	movlw	255
   767  000038  EC8C  F001         	call	_serial_send_data
   768  00003C  2A11               	incf	tlc_init@i,f,c
   769  00003E                     L2:
   770  00003E  0E0B               	movlw	11
   771  000040  6411               	cpfsgt	tlc_init@i,c
   772  000042  D7F9               	goto	l699
   773                           
   774                           ;tlc5940.c: 35: }
   775                           ;tlc5940.c: 38: _delay((unsigned long)((1)*(8000000/4000000.0)));
   776  000044  D000               	nop2		;2 cycle nop
   777                           
   778                           ;tlc5940.c: 39: LATDbits.LD0 = 1;
   779  000046  808C               	bsf	3980,0,c	;volatile
   780                           
   781                           ;tlc5940.c: 40: _delay((unsigned long)((1)*(8000000/4000000.0)));
   782  000048  D000               	nop2		;2 cycle nop
   783                           
   784                           ;tlc5940.c: 41: LATDbits.LD0 = 0;
   785  00004A  908C               	bcf	3980,0,c	;volatile
   786                           
   787                           ;tlc5940.c: 42: _delay((unsigned long)((1)*(8000000/4000000.0)));
   788  00004C  D000               	nop2		;2 cycle nop
   789                           
   790                           ;tlc5940.c: 46: _delay((unsigned long)((2)*(8000000/4000.0)));
   791  00004E  0E06               	movlw	6
   792  000050  6E10               	movwf	??_tlc_init& (0+255),c
   793  000052  0E30               	movlw	48
   794  000054                     u157:
   795  000054  2EE8               	decfsz	wreg,f,c
   796  000056  D7FE               	goto	u157
   797  000058  2E10               	decfsz	??_tlc_init& (0+255),f,c
   798  00005A  D7FC               	goto	u157
   799  00005C  D000               	nop2	
   800                           
   801                           ;tlc5940.c: 48: T2CONbits.TMR2ON = 0;
   802  00005E  94CA               	bcf	4042,2,c	;volatile
   803                           
   804                           ;tlc5940.c: 49: LATDbits.LD1 = 0;
   805  000060  928C               	bcf	3980,1,c	;volatile
   806                           
   807                           ;tlc5940.c: 50: LATDbits.LD0 = 0;
   808  000062  908C               	bcf	3980,0,c	;volatile
   809                           
   810                           ;tlc5940.c: 51: LATDbits.LD2 = 0;
   811  000064  948C               	bcf	3980,2,c	;volatile
   812                           
   813                           ;tlc5940.c: 55: tlc_servo[0] = 235;
   814  000066  0EEB               	movlw	235
   815  000068  6E15               	movwf	_tlc_servo,c
   816                           
   817                           ;tlc5940.c: 56: tlc_servo[1] = 0;
   818  00006A  0E00               	movlw	0
   819  00006C  6E16               	movwf	_tlc_servo+1,c
   820                           
   821                           ;tlc5940.c: 57: tlc_servo[2] = 0;
   822  00006E  0E00               	movlw	0
   823  000070  6E17               	movwf	_tlc_servo+2,c
   824                           
   825                           ;tlc5940.c: 58: tlc_servo[3] = 0;
   826  000072  0E00               	movlw	0
   827  000074  6E18               	movwf	_tlc_servo+3,c
   828                           
   829                           ;tlc5940.c: 59: tlc_servo[4] = 0;
   830  000076  0E00               	movlw	0
   831  000078  6E19               	movwf	_tlc_servo+4,c
   832                           
   833                           ;tlc5940.c: 60: tlc_servo[5] = 0;
   834  00007A  0E00               	movlw	0
   835  00007C  6E1A               	movwf	_tlc_servo+5,c
   836                           
   837                           ;tlc5940.c: 61: tlc_servo[6] = 0;
   838  00007E  0E00               	movlw	0
   839  000080  6E1B               	movwf	_tlc_servo+6,c
   840                           
   841                           ;tlc5940.c: 62: tlc_servo[7] = 0;
   842  000082  0E00               	movlw	0
   843  000084  6E1C               	movwf	_tlc_servo+7,c
   844                           
   845                           ;tlc5940.c: 63: tlc_servo[8] = 0;
   846  000086  0E00               	movlw	0
   847  000088  6E1D               	movwf	_tlc_servo+8,c
   848                           
   849                           ;tlc5940.c: 64: tlc_servo[9] = 0;
   850  00008A  0E00               	movlw	0
   851  00008C  6E1E               	movwf	_tlc_servo+9,c
   852                           
   853                           ;tlc5940.c: 65: tlc_servo[10] = 0;
   854  00008E  0E00               	movlw	0
   855  000090  6E1F               	movwf	_tlc_servo+10,c
   856                           
   857                           ;tlc5940.c: 66: tlc_servo[11] = 0;
   858  000092  0E00               	movlw	0
   859  000094  6E20               	movwf	_tlc_servo+11,c
   860                           
   861                           ;tlc5940.c: 67: tlc_servo[12] = 0;
   862  000096  0E00               	movlw	0
   863  000098  6E21               	movwf	_tlc_servo+12,c
   864                           
   865                           ;tlc5940.c: 68: tlc_servo[13] = 0;
   866  00009A  0E00               	movlw	0
   867  00009C  6E22               	movwf	_tlc_servo+13,c
   868                           
   869                           ;tlc5940.c: 69: tlc_servo[14] = 0;
   870  00009E  0E00               	movlw	0
   871  0000A0  6E23               	movwf	_tlc_servo+14,c
   872                           
   873                           ;tlc5940.c: 70: tlc_servo[15] = 235;
   874  0000A2  0EEB               	movlw	235
   875  0000A4  6E24               	movwf	_tlc_servo+15,c
   876                           
   877                           ;tlc5940.c: 73: for(char i = 0; i < 24; i++)
   878  0000A6  0E00               	movlw	0
   879  0000A8  6E12               	movwf	tlc_init@i_158,c
   880  0000AA  D004               	goto	L3
   881  0000AC                     l753:
   882                           
   883                           ;tlc5940.c: 74: {
   884                           ;tlc5940.c: 75: serial_send_data(0b00000000);
   885  0000AC  0E00               	movlw	0
   886  0000AE  EC8C  F001         	call	_serial_send_data
   887  0000B2  2A12               	incf	tlc_init@i_158,f,c
   888  0000B4                     L3:
   889  0000B4  0E17               	movlw	23
   890  0000B6  6412               	cpfsgt	tlc_init@i_158,c
   891  0000B8  D7F9               	goto	l753
   892                           
   893                           ;tlc5940.c: 76: }
   894                           ;tlc5940.c: 79: _delay((unsigned long)((1)*(8000000/4000000.0)));
   895  0000BA  D000               	nop2		;2 cycle nop
   896                           
   897                           ;tlc5940.c: 80: LATDbits.LD0 = 1;
   898  0000BC  808C               	bsf	3980,0,c	;volatile
   899                           
   900                           ;tlc5940.c: 81: _delay((unsigned long)((1)*(8000000/4000000.0)));
   901  0000BE  D000               	nop2		;2 cycle nop
   902                           
   903                           ;tlc5940.c: 82: LATDbits.LD0 = 0;
   904  0000C0  908C               	bcf	3980,0,c	;volatile
   905                           
   906                           ;tlc5940.c: 83: _delay((unsigned long)((1)*(8000000/4000000.0)));
   907  0000C2  D000               	nop2		;2 cycle nop
   908                           
   909                           ;tlc5940.c: 85: serial_send_data(0b10000000);
   910  0000C4  0E80               	movlw	128
   911  0000C6  EC8C  F001         	call	_serial_send_data
   912  0000CA  0012               	return	
   913  0000CC                     __end_of_tlc_init:
   914                           	opt stack 0
   915                           pclatu	equ	0xFFB
   916                           pclath	equ	0xFFA
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           prodh	equ	0xFF4
   922                           prodl	equ	0xFF3
   923                           intcon	equ	0xFF2
   924                           postinc0	equ	0xFEE
   925                           fsr0h	equ	0xFEA
   926                           fsr0l	equ	0xFE9
   927                           wreg	equ	0xFE8
   928                           fsr1h	equ	0xFE2
   929                           fsr1l	equ	0xFE1
   930                           indf2	equ	0xFDF
   931                           fsr2h	equ	0xFDA
   932                           fsr2l	equ	0xFD9
   933                           status	equ	0xFD8
   934                           
   935 ;; *************** function _serial_send_data *****************
   936 ;; Defined at:
   937 ;;		line 17 in file "tlc5940.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  data            1    wreg     unsigned char 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  data            1   14[COMRAM] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		wreg
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   951 ;;      Params:         0       0       0       0       0       0       0
   952 ;;      Locals:         1       0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0
   954 ;;      Totals:         1       0       0       0       0       0       0
   955 ;;Total ram usage:        1 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_tlc_init
   962 ;;		_tlc_update
   963 ;;		_tlc_write
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text4
   968  000318                     __ptext4:
   969                           	opt stack 0
   970  000318                     _serial_send_data:
   971                           	opt stack 28
   972                           
   973                           ;incstack = 0
   974                           ;serial_send_data@data stored from wreg
   975  000318  6E0F               	movwf	serial_send_data@data,c
   976                           
   977                           ;tlc5940.c: 19: SSPBUF = data;
   978  00031A  C00F  FFC9         	movff	serial_send_data@data,4041	;volatile
   979                           
   980                           ;tlc5940.c: 21: _delay((unsigned long)((1)*(8000000/4000000.0)));
   981  00031E  D000               	nop2		;2 cycle nop
   982  000320  0012               	return	
   983  000322                     __end_of_serial_send_data:
   984                           	opt stack 0
   985                           pclatu	equ	0xFFB
   986                           pclath	equ	0xFFA
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           prodh	equ	0xFF4
   992                           prodl	equ	0xFF3
   993                           intcon	equ	0xFF2
   994                           postinc0	equ	0xFEE
   995                           fsr0h	equ	0xFEA
   996                           fsr0l	equ	0xFE9
   997                           wreg	equ	0xFE8
   998                           fsr1h	equ	0xFE2
   999                           fsr1l	equ	0xFE1
  1000                           indf2	equ	0xFDF
  1001                           fsr2h	equ	0xFDA
  1002                           fsr2l	equ	0xFD9
  1003                           status	equ	0xFD8
  1004                           
  1005 ;; *************** function _spi_init *****************
  1006 ;; Defined at:
  1007 ;;		line 52 in file "main.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;		None               void
  1014 ;; Registers used:
  1015 ;;		None
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1021 ;;      Params:         0       0       0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0
  1024 ;;      Totals:         0       0       0       0       0       0       0
  1025 ;;Total ram usage:        0 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text5
  1036  0002F0                     __ptext5:
  1037                           	opt stack 0
  1038  0002F0                     _spi_init:
  1039                           	opt stack 29
  1040                           
  1041                           ;main.c: 54: SSPSTATbits.SMP = 0;
  1042                           
  1043                           ;incstack = 0
  1044  0002F0  9EC7               	bcf	4039,7,c	;volatile
  1045                           
  1046                           ;main.c: 55: SSPSTATbits.CKE = 1;
  1047  0002F2  8CC7               	bsf	4039,6,c	;volatile
  1048                           
  1049                           ;main.c: 56: SSPCON1bits.CKP = 0;
  1050  0002F4  98C6               	bcf	4038,4,c	;volatile
  1051                           
  1052                           ;main.c: 57: SSPCON1bits.SSPM0 = 0;
  1053  0002F6  90C6               	bcf	4038,0,c	;volatile
  1054                           
  1055                           ;main.c: 58: SSPCON1bits.SSPM1 = 0;
  1056  0002F8  92C6               	bcf	4038,1,c	;volatile
  1057                           
  1058                           ;main.c: 59: SSPCON1bits.SSPM2 = 0;
  1059  0002FA  94C6               	bcf	4038,2,c	;volatile
  1060                           
  1061                           ;main.c: 60: SSPCON1bits.SSPM3 = 0;
  1062  0002FC  96C6               	bcf	4038,3,c	;volatile
  1063                           
  1064                           ;main.c: 61: SSPCON1bits.SSPEN = 1;
  1065  0002FE  8AC6               	bsf	4038,5,c	;volatile
  1066                           
  1067                           ;main.c: 63: TRISCbits.RC5 = 0;
  1068  000300  9A94               	bcf	3988,5,c	;volatile
  1069                           
  1070                           ;main.c: 64: TRISCbits.RC3 = 0;
  1071  000302  9694               	bcf	3988,3,c	;volatile
  1072  000304  0012               	return	
  1073  000306                     __end_of_spi_init:
  1074                           	opt stack 0
  1075                           pclatu	equ	0xFFB
  1076                           pclath	equ	0xFFA
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           prodh	equ	0xFF4
  1082                           prodl	equ	0xFF3
  1083                           intcon	equ	0xFF2
  1084                           postinc0	equ	0xFEE
  1085                           fsr0h	equ	0xFEA
  1086                           fsr0l	equ	0xFE9
  1087                           wreg	equ	0xFE8
  1088                           fsr1h	equ	0xFE2
  1089                           fsr1l	equ	0xFE1
  1090                           indf2	equ	0xFDF
  1091                           fsr2h	equ	0xFDA
  1092                           fsr2l	equ	0xFD9
  1093                           status	equ	0xFD8
  1094                           
  1095 ;; *************** function _delay_sec *****************
  1096 ;; Defined at:
  1097 ;;		line 28 in file "main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  i               2   15[COMRAM] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1111 ;;      Params:         0       0       0       0       0       0       0
  1112 ;;      Locals:         2       0       0       0       0       0       0
  1113 ;;      Temps:          1       0       0       0       0       0       0
  1114 ;;      Totals:         3       0       0       0       0       0       0
  1115 ;;Total ram usage:        3 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text6
  1126  00028A                     __ptext6:
  1127                           	opt stack 0
  1128  00028A                     _delay_sec:
  1129                           	opt stack 29
  1130                           
  1131                           ;main.c: 30: for(int i = 0; i < 50; i++)
  1132                           
  1133                           ;incstack = 0
  1134  00028A  0E00               	movlw	0
  1135  00028C  6E11               	movwf	delay_sec@i+1,c
  1136  00028E  0E00               	movlw	0
  1137  000290  6E10               	movwf	delay_sec@i,c
  1138  000292  5011               	movf	delay_sec@i+1,w,c
  1139  000294  0A80               	xorlw	128
  1140  000296  0F80               	addlw	-128
  1141  000298  0E32               	movlw	50
  1142  00029A  B4D8               	btfsc	status,2,c
  1143  00029C  5C10               	subwf	delay_sec@i,w,c
  1144  00029E  B0D8               	btfsc	status,0,c
  1145  0002A0  D00B               	goto	l92
  1146                           
  1147                           ;main.c: 31: {
  1148                           ;main.c: 32: _delay((unsigned long)((10)*(8000000/4000.0)));
  1149  0002A2  0E1A               	movlw	26
  1150  0002A4  6E0F               	movwf	??_delay_sec& (0+255),c
  1151  0002A6  0EF8               	movlw	248
  1152  0002A8                     u167:
  1153  0002A8  2EE8               	decfsz	wreg,f,c
  1154  0002AA  D7FE               	goto	u167
  1155  0002AC  2E0F               	decfsz	??_delay_sec& (0+255),f,c
  1156  0002AE  D7FC               	goto	u167
  1157  0002B0  D000               	nop2	
  1158  0002B2  4A10               	infsnz	delay_sec@i,f,c
  1159  0002B4  2A11               	incf	delay_sec@i+1,f,c
  1160  0002B6  D7ED               	goto	L4
  1161  0002B8                     l92:
  1162  0002B8  0012               	return	
  1163  0002BA                     __end_of_delay_sec:
  1164                           	opt stack 0
  1165                           pclatu	equ	0xFFB
  1166                           pclath	equ	0xFFA
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           prodh	equ	0xFF4
  1172                           prodl	equ	0xFF3
  1173                           intcon	equ	0xFF2
  1174                           postinc0	equ	0xFEE
  1175                           fsr0h	equ	0xFEA
  1176                           fsr0l	equ	0xFE9
  1177                           wreg	equ	0xFE8
  1178                           fsr1h	equ	0xFE2
  1179                           fsr1l	equ	0xFE1
  1180                           indf2	equ	0xFDF
  1181                           fsr2h	equ	0xFDA
  1182                           fsr2l	equ	0xFD9
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _TMR2_init *****************
  1186 ;; Defined at:
  1187 ;;		line 67 in file "main.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;		None               void
  1194 ;; Registers used:
  1195 ;;		wreg, status,2
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1201 ;;      Params:         0       0       0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0
  1204 ;;      Totals:         0       0       0       0       0       0       0
  1205 ;;Total ram usage:        0 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text7
  1216  0002BA                     __ptext7:
  1217                           	opt stack 0
  1218  0002BA                     _TMR2_init:
  1219                           	opt stack 29
  1220                           
  1221                           ;main.c: 70: PR2 = 0b00000100;
  1222                           
  1223                           ;incstack = 0
  1224  0002BA  0E04               	movlw	4
  1225  0002BC  6ECB               	movwf	4043,c	;volatile
  1226                           
  1227                           ;main.c: 71: T2CON = 0b01111101;
  1228  0002BE  0E7D               	movlw	125
  1229  0002C0  6ECA               	movwf	4042,c	;volatile
  1230                           
  1231                           ;main.c: 72: CCPR1L = 0b00000010;
  1232  0002C2  0E02               	movlw	2
  1233  0002C4  6EBE               	movwf	4030,c	;volatile
  1234                           
  1235                           ;main.c: 73: CCP1CON = 0b00101100;
  1236  0002C6  0E2C               	movlw	44
  1237  0002C8  6EBD               	movwf	4029,c	;volatile
  1238                           
  1239                           ;main.c: 74: TRISC = 0b00000000;
  1240  0002CA  0E00               	movlw	0
  1241  0002CC  6E94               	movwf	3988,c	;volatile
  1242                           
  1243                           ;main.c: 75: PORTC = 0b00000000;
  1244  0002CE  0E00               	movlw	0
  1245  0002D0  6E82               	movwf	3970,c	;volatile
  1246                           
  1247                           ;main.c: 76: T2CONbits.TMR2ON = 0;
  1248  0002D2  94CA               	bcf	4042,2,c	;volatile
  1249  0002D4  0012               	return	
  1250  0002D6                     __end_of_TMR2_init:
  1251                           	opt stack 0
  1252                           pclatu	equ	0xFFB
  1253                           pclath	equ	0xFFA
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           prodh	equ	0xFF4
  1259                           prodl	equ	0xFF3
  1260                           intcon	equ	0xFF2
  1261                           postinc0	equ	0xFEE
  1262                           fsr0h	equ	0xFEA
  1263                           fsr0l	equ	0xFE9
  1264                           wreg	equ	0xFE8
  1265                           fsr1h	equ	0xFE2
  1266                           fsr1l	equ	0xFE1
  1267                           indf2	equ	0xFDF
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _blank_pulse *****************
  1273 ;; Defined at:
  1274 ;;		line 36 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;		None               void
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1288 ;;      Params:         0       0       0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0
  1290 ;;      Temps:         14       0       0       0       0       0       0
  1291 ;;      Totals:        14       0       0       0       0       0       0
  1292 ;;Total ram usage:       14 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		Interrupt level 2
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	intcode
  1302  000008                     __pintcode:
  1303                           	opt stack 0
  1304  000008                     _blank_pulse:
  1305                           	opt stack 28
  1306                           
  1307                           ;incstack = 0
  1308  000008  CFFA F001          	movff	pclath,??_blank_pulse
  1309  00000C  CFFB F002          	movff	pclatu,??_blank_pulse+1
  1310  000010  CFE9 F003          	movff	fsr0l,??_blank_pulse+2
  1311  000014  EDB6  F000         	call	int_func,f	;refresh shadow registers
  1312                           pclatu	equ	0xFFB
  1313                           pclath	equ	0xFFA
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           prodh	equ	0xFF4
  1319                           prodl	equ	0xFF3
  1320                           intcon	equ	0xFF2
  1321                           postinc0	equ	0xFEE
  1322                           fsr0h	equ	0xFEA
  1323                           fsr0l	equ	0xFE9
  1324                           wreg	equ	0xFE8
  1325                           fsr1h	equ	0xFE2
  1326                           fsr1l	equ	0xFE1
  1327                           indf2	equ	0xFDF
  1328                           fsr2h	equ	0xFDA
  1329                           fsr2l	equ	0xFD9
  1330                           status	equ	0xFD8
  1331                           pclatu	equ	0xFFB
  1332                           pclath	equ	0xFFA
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           intcon	equ	0xFF2
  1340                           postinc0	equ	0xFEE
  1341                           fsr0h	equ	0xFEA
  1342                           fsr0l	equ	0xFE9
  1343                           wreg	equ	0xFE8
  1344                           fsr1h	equ	0xFE2
  1345                           fsr1l	equ	0xFE1
  1346                           indf2	equ	0xFDF
  1347                           fsr2h	equ	0xFDA
  1348                           fsr2l	equ	0xFD9
  1349                           status	equ	0xFD8
  1350                           
  1351                           	psect	rparam
  1352  0000                     pclatu	equ	0xFFB
  1353                           pclath	equ	0xFFA
  1354                           tblptru	equ	0xFF8
  1355                           tblptrh	equ	0xFF7
  1356                           tblptrl	equ	0xFF6
  1357                           tablat	equ	0xFF5
  1358                           prodh	equ	0xFF4
  1359                           prodl	equ	0xFF3
  1360                           intcon	equ	0xFF2
  1361                           postinc0	equ	0xFEE
  1362                           fsr0h	equ	0xFEA
  1363                           fsr0l	equ	0xFE9
  1364                           wreg	equ	0xFE8
  1365                           fsr1h	equ	0xFE2
  1366                           fsr1l	equ	0xFE1
  1367                           indf2	equ	0xFDF
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      38
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_tlc_update
    _tlc_update->_serial_send_data
    _tlc_init->_serial_send_data

Critical Paths under _blank_pulse in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _blank_pulse in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _blank_pulse in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _blank_pulse in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _blank_pulse in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _blank_pulse in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _blank_pulse in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     338
                          _TMR2_init
                          _delay_sec
                           _spi_init
                           _tlc_init
                            _tlc_set
                         _tlc_update
 ---------------------------------------------------------------------------------
 (1) _tlc_update                                           5     5      0     135
                                             15 COMRAM     5     5      0
                   _serial_send_data
 ---------------------------------------------------------------------------------
 (1) _tlc_set                                              2     1      1      98
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _tlc_init                                             3     3      0      75
                                             15 COMRAM     3     3      0
                   _serial_send_data
 ---------------------------------------------------------------------------------
 (2) _serial_send_data                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_sec                                            3     3      0      30
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _blank_pulse                                         14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR2_init
   _delay_sec
   _spi_init
   _tlc_init
     _serial_send_data
   _tlc_set
   _tlc_update
     _serial_send_data

 _blank_pulse (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      26       1       29.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26      15        0.0%
DATA                 0      0      26       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Jun 19 00:14:44 2014

              _SSPSTATbits 000FC7                         l92 02B8               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l753 00AC                        l769 00E0  
                      l699 0036                        l859 0240                        u147 0026  
                      u157 0054                        _PR2 000FCB                        u167 02A8  
                      prod 000FF3                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       i2l97 01C4                       _main 01FE  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 0018              __CFG_MCLRE$ON 000000  
     serial_send_data@data 000F                      ?_main 0001                      _T2CON 000FCA  
                    i2l833 01BE                      _PORTA 000F80                      _PORTB 000F81  
                    _PORTC 000F82                      _PORTD 000F83                      _PORTE 000F84  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96              __CFG_PWRT$OFF 000000  
                    _count 0025         __size_of_TMR2_init 001C             __CFG_BOREN$OFF 000000  
                    tablat 000FF5            __end_of_tlc_set 02F0                      status 000FD8  
     __size_of_blank_pulse 01F6            __initialization 0306               __end_of_main 028A  
                   ??_main 0015              __activetblptr 000000                     _CCPR1L 000FBE  
                   _SSPBUF 000FC9   __end_of_serial_send_data 0322          __end_of_TMR2_init 02D6  
                   clear_0 030C           __end_of_tlc_init 00CC                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8           __end_of_spi_init 0306  
                ??_tlc_set 0010                 __accesstop 0080    __end_of__initialization 0312  
           __pcstackCOMRAM 0001         __size_of_delay_sec 0030    tlc_set@tlc_servo_number 0010  
                  _CCP1CON 000FBD          __end_of_delay_sec 02BA                    __Hparam 0000  
                  __Lparam 0000                  ?_tlc_init 0001                  ?_spi_init 0001  
                  __pcinit 0306                    __ramtop 0600                    __ptext0 01FE  
                  __ptext1 00CC                    __ptext2 02D6                    __ptext3 001C  
                  __ptext4 0318                    __ptext5 02F0                    __ptext6 028A  
                  __ptext7 02BA                  _T2CONbits 000FCA                    _tlc_set 02D6  
           __pintcode_body 016C       end_of_initialization 0312                 delay_sec@i 0010  
            ??_blank_pulse 0001                    int_func 016C          ?_serial_send_data 0001  
       ??_serial_send_data 000F                 ??_tlc_init 0010                tlc_update@i 0014  
               ??_spi_init 000F                    postinc0 000FEE                 _tlc_update 00CC  
                _TMR2_init 02BA                  _TRISCbits 000F94        __end_of_blank_pulse 01FE  
               ?_TMR2_init 0001        start_initialization 0306                ?_tlc_update 0001  
              __pbssCOMRAM 0015                _blank_pulse 0008                  _delay_sec 028A  
                __pintcode 0008          __size_of_tlc_init 00B0          __size_of_spi_init 0016  
              ??_TMR2_init 000F                   ?_tlc_set 000F        __size_of_tlc_update 00A0  
                 _LATDbits 000F8C                   _PIE1bits 000F9D                 ?_delay_sec 0001  
                 _PIR1bits 000F9E                  _tlc_servo 0015  __size_of_serial_send_data 000A  
            tlc_init@i_158 0012                   __Hrparam 0000                   __Lrparam 0000  
         __size_of_tlc_set 001A              __size_of_main 008C                  tlc_init@i 0011  
              ??_delay_sec 000F                   _tlc_init 001C                   _spi_init 02F0  
             ??_tlc_update 0010                 _INTCONbits 000FF2               tlc_set@value 000F  
                 intlevel2 0000         __end_of_tlc_update 016C               ?_blank_pulse 0001  
        tlc_update@counter 0013           _serial_send_data 0318                _SSPCON1bits 000FC6  
