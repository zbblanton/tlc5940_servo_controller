

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Jun 28 04:20:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     _CCP1CON	set	4029
    22  0000                     _CCPR1L	set	4030
    23  0000                     _INTCONbits	set	4082
    24  0000                     _LATDbits	set	3980
    25  0000                     _PIE1bits	set	3997
    26  0000                     _PIR1bits	set	3998
    27  0000                     _PORTA	set	3968
    28  0000                     _PORTB	set	3969
    29  0000                     _PORTC	set	3970
    30  0000                     _PORTD	set	3971
    31  0000                     _PORTE	set	3972
    32  0000                     _PR2	set	4043
    33  0000                     _SSPBUF	set	4041
    34  0000                     _SSPCON1bits	set	4038
    35  0000                     _SSPSTATbits	set	4039
    36  0000                     _T2CON	set	4042
    37  0000                     _T2CONbits	set	4042
    38  0000                     _TRISA	set	3986
    39  0000                     _TRISB	set	3987
    40  0000                     _TRISC	set	3988
    41  0000                     _TRISCbits	set	3988
    42  0000                     _TRISD	set	3989
    43  0000                     _TRISE	set	3990
    44                           
    45                           	psect	intcode_body
    46  0002DE                     __pintcode_body:
    47                           	opt stack 0
    48                           
    49                           ; #config settings
    50  0002DE                     int_func:
    51                           	opt stack 28
    52  0002DE  0006               	pop		; remove dummy address from shadow register refresh
    53  0002E0  CFEA F026          	movff	fsr0h,??_blank_pulse+3
    54  0002E4  CFE1 F027          	movff	fsr1l,??_blank_pulse+4
    55  0002E8  CFE2 F028          	movff	fsr1h,??_blank_pulse+5
    56  0002EC  CFD9 F029          	movff	fsr2l,??_blank_pulse+6
    57  0002F0  CFDA F02A          	movff	fsr2h,??_blank_pulse+7
    58  0002F4  CFF3 F02B          	movff	prodl,??_blank_pulse+8
    59  0002F8  CFF4 F02C          	movff	prodh,??_blank_pulse+9
    60  0002FC  CFF6 F02D          	movff	tblptrl,??_blank_pulse+10
    61  000300  CFF7 F02E          	movff	tblptrh,??_blank_pulse+11
    62  000304  CFF8 F02F          	movff	tblptru,??_blank_pulse+12
    63  000308  CFF5 F030          	movff	tablat,??_blank_pulse+13
    64                           
    65                           ;main.c: 36: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF)
    66  00030C  B29D               	btfsc	3997,1,c	;volatile
    67  00030E  A29E               	btfss	3998,1,c	;volatile
    68  000310  D012               	goto	i2l119
    69                           
    70                           ;main.c: 37: {
    71                           ;main.c: 38: if(count >= 125)
    72  000312  5022               	movf	_count+1,w,c	;volatile
    73  000314  0A80               	xorlw	128
    74  000316  0F80               	addlw	-128
    75  000318  0E7D               	movlw	125
    76  00031A  B4D8               	btfsc	status,2,c
    77  00031C  5C21               	subwf	_count,w,c	;volatile
    78  00031E  A0D8               	btfss	status,0,c
    79  000320  D007               	goto	i2l891
    80                           
    81                           ;main.c: 39: {
    82                           ;main.c: 40: LATDbits.LD2 = 1;
    83  000322  848C               	bsf	3980,2,c	;volatile
    84                           
    85                           ;main.c: 41: _delay((unsigned long)((1)*(8000000/4000000.0)));
    86  000324  D000               	nop2		;2 cycle nop
    87                           
    88                           ;main.c: 42: LATDbits.LD2 = 0;
    89  000326  948C               	bcf	3980,2,c	;volatile
    90                           
    91                           ;main.c: 43: count = 0;
    92  000328  0E00               	movlw	0
    93  00032A  6E22               	movwf	_count+1,c	;volatile
    94  00032C  0E00               	movlw	0
    95  00032E  6E21               	movwf	_count,c	;volatile
    96  000330                     i2l891:
    97                           
    98                           ;main.c: 44: }
    99                           ;main.c: 45: count++;
   100  000330  4A21               	infsnz	_count,f,c	;volatile
   101  000332  2A22               	incf	_count+1,f,c	;volatile
   102                           
   103                           ;main.c: 46: PIR1bits.TMR2IF = 0;
   104  000334  929E               	bcf	3998,1,c	;volatile
   105  000336                     i2l119:
   106  000336  C030  FFF5         	movff	??_blank_pulse+13,tablat
   107  00033A  C02F  FFF8         	movff	??_blank_pulse+12,tblptru
   108  00033E  C02E  FFF7         	movff	??_blank_pulse+11,tblptrh
   109  000342  C02D  FFF6         	movff	??_blank_pulse+10,tblptrl
   110  000346  C02C  FFF4         	movff	??_blank_pulse+9,prodh
   111  00034A  C02B  FFF3         	movff	??_blank_pulse+8,prodl
   112  00034E  C02A  FFDA         	movff	??_blank_pulse+7,fsr2h
   113  000352  C029  FFD9         	movff	??_blank_pulse+6,fsr2l
   114  000356  C028  FFE2         	movff	??_blank_pulse+5,fsr1h
   115  00035A  C027  FFE1         	movff	??_blank_pulse+4,fsr1l
   116  00035E  C026  FFEA         	movff	??_blank_pulse+3,fsr0h
   117  000362  C025  FFE9         	movff	??_blank_pulse+2,fsr0l
   118  000366  C024  FFFB         	movff	??_blank_pulse+1,pclatu
   119  00036A  C023  FFFA         	movff	??_blank_pulse,pclath
   120  00036E  0011               	retfie		f
   121  000370                     __end_of_blank_pulse:
   122                           	opt stack 0
   123  0000                     pclatu	equ	0xFFB
   124                           pclath	equ	0xFFA
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           prodh	equ	0xFF4
   130                           prodl	equ	0xFF3
   131                           fsr0h	equ	0xFEA
   132                           fsr0l	equ	0xFE9
   133                           fsr1h	equ	0xFE2
   134                           fsr1l	equ	0xFE1
   135                           fsr2h	equ	0xFDA
   136                           fsr2l	equ	0xFD9
   137                           status	equ	0xFD8
   138                           
   139                           	psect	cinit
   140  000468                     __pcinit:
   141                           	opt stack 0
   142  000468                     start_initialization:
   143                           	opt stack 0
   144  000468                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to COMRAM (34 bytes)
   148  000468  EE00  F001         	lfsr	0,__pbssCOMRAM
   149  00046C  0E22               	movlw	34
   150  00046E                     clear_0:
   151  00046E  6AEE               	clrf	postinc0,c
   152  000470  06E8               	decf	wreg,f,c
   153  000472  E1FD               	bnz	clear_0
   154  000474                     end_of_initialization:
   155                           	opt stack 0
   156  000474                     __end_of__initialization:
   157                           	opt stack 0
   158  000474  0100               	movlb	0
   159  000476  EFB8  F001         	goto	_main	;jump to C main() function
   160                           pclatu	equ	0xFFB
   161                           pclath	equ	0xFFA
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           prodh	equ	0xFF4
   167                           prodl	equ	0xFF3
   168                           postinc0	equ	0xFEE
   169                           fsr0h	equ	0xFEA
   170                           fsr0l	equ	0xFE9
   171                           wreg	equ	0xFE8
   172                           fsr1h	equ	0xFE2
   173                           fsr1l	equ	0xFE1
   174                           fsr2h	equ	0xFDA
   175                           fsr2l	equ	0xFD9
   176                           status	equ	0xFD8
   177                           
   178                           	psect	bssCOMRAM
   179  000001                     __pbssCOMRAM:
   180                           	opt stack 0
   181  000001                     _tlc_servo:
   182                           	opt stack 0
   183  000001                     	ds	16
   184  000011                     _tlc_servo_temp:
   185                           	opt stack 0
   186  000011                     	ds	16
   187  000021                     _count:
   188                           	opt stack 0
   189  000021                     	ds	2
   190                           pclatu	equ	0xFFB
   191                           pclath	equ	0xFFA
   192                           tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           prodh	equ	0xFF4
   197                           prodl	equ	0xFF3
   198                           postinc0	equ	0xFEE
   199                           fsr0h	equ	0xFEA
   200                           fsr0l	equ	0xFE9
   201                           wreg	equ	0xFE8
   202                           fsr1h	equ	0xFE2
   203                           fsr1l	equ	0xFE1
   204                           fsr2h	equ	0xFDA
   205                           fsr2l	equ	0xFD9
   206                           status	equ	0xFD8
   207                           
   208                           	psect	cstackCOMRAM
   209  000023                     __pcstackCOMRAM:
   210                           	opt stack 0
   211  000023                     ??_blank_pulse:
   212  000023                     
   213                           ; 2 bytes @ 0x0
   214  000023                     	ds	14
   215  000031                     ??_delay_sec:
   216  000031                     serial_send_data@data:
   217                           	opt stack 0
   218  000031                     tlc_set@value:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0xE
   222  000031                     	ds	1
   223  000032                     ??_tlc_init:
   224  000032                     ??_tlc_update:
   225  000032                     ??_tlc_sweep:
   226  000032                     tlc_set@tlc_servo_number:
   227                           	opt stack 0
   228  000032                     delay_sec@i:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0xF
   232  000032                     	ds	1
   233  000033                     tlc_init@i:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x10
   237  000033                     	ds	1
   238  000034                     tlc_init@i_159:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x11
   242  000034                     	ds	1
   243  000035                     tlc_update@counter:
   244                           	opt stack 0
   245  000035                     tlc_sweep@j:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x12
   249  000035                     	ds	1
   250  000036                     tlc_update@i:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x13
   254  000036                     	ds	1
   255  000037                     tlc_sweep@num_of_increments:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x14
   259  000037                     	ds	1
   260  000038                     tlc_sweep@counter:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x15
   264  000038                     	ds	1
   265  000039                     tlc_sweep@i_176:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x16
   269  000039                     	ds	1
   270  00003A                     tlc_sweep@i:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x17
   274  00003A                     	ds	2
   275  00003C                     pclatu	equ	0xFFB
   276                           pclath	equ	0xFFA
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           prodh	equ	0xFF4
   282                           prodl	equ	0xFF3
   283                           postinc0	equ	0xFEE
   284                           fsr0h	equ	0xFEA
   285                           fsr0l	equ	0xFE9
   286                           wreg	equ	0xFE8
   287                           fsr1h	equ	0xFE2
   288                           fsr1l	equ	0xFE1
   289                           fsr2h	equ	0xFDA
   290                           fsr2l	equ	0xFD9
   291                           status	equ	0xFD8
   292                           
   293                           ; 0 bytes @ 0x19
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 77 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  2  127[COMRAM] int 
   306 ;; Registers used:
   307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   313 ;;      Params:         0       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called:    3
   319 ;; This function calls:
   320 ;;		_TMR2_init
   321 ;;		_delay_sec
   322 ;;		_spi_init
   323 ;;		_tlc_init
   324 ;;		_tlc_set
   325 ;;		_tlc_sweep
   326 ;;		_tlc_update
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text0
   333  000370                     __ptext0:
   334                           	opt stack 0
   335  000370                     _main:
   336                           	opt stack 28
   337                           
   338                           ;main.c: 79: TRISD = 0b00000000;
   339                           
   340                           ;incstack = 0
   341  000370  0E00               	movlw	0
   342  000372  6E95               	movwf	3989,c	;volatile
   343                           
   344                           ;main.c: 80: PORTD = 0b00000000;
   345  000374  0E00               	movlw	0
   346  000376  6E83               	movwf	3971,c	;volatile
   347                           
   348                           ;main.c: 81: TRISB = 0b00100000;
   349  000378  0E20               	movlw	32
   350  00037A  6E93               	movwf	3987,c	;volatile
   351                           
   352                           ;main.c: 82: PORTB = 0b00000000;
   353  00037C  0E00               	movlw	0
   354  00037E  6E81               	movwf	3969,c	;volatile
   355                           
   356                           ;main.c: 83: TRISA = 0b00001111;
   357  000380  0E0F               	movlw	15
   358  000382  6E92               	movwf	3986,c	;volatile
   359                           
   360                           ;main.c: 84: PORTA = 0b00001111;
   361  000384  0E0F               	movlw	15
   362  000386  6E80               	movwf	3968,c	;volatile
   363                           
   364                           ;main.c: 85: TRISE = 0b00001000;
   365  000388  0E08               	movlw	8
   366  00038A  6E96               	movwf	3990,c	;volatile
   367                           
   368                           ;main.c: 86: PORTE = 0b00000000;
   369  00038C  0E00               	movlw	0
   370  00038E  6E84               	movwf	3972,c	;volatile
   371                           
   372                           ;main.c: 88: TMR2_init();
   373  000390  EC0E  F002         	call	_TMR2_init	;wreg free
   374                           
   375                           ;main.c: 89: count = 0;
   376  000394  0E00               	movlw	0
   377  000396  6E22               	movwf	_count+1,c	;volatile
   378  000398  0E00               	movlw	0
   379  00039A  6E21               	movwf	_count,c	;volatile
   380                           
   381                           ;main.c: 91: PIE1bits.TMR2IE = 1;
   382  00039C  829D               	bsf	3997,1,c	;volatile
   383                           
   384                           ;main.c: 92: INTCONbits.PEIE = 1;
   385  00039E  8CF2               	bsf	intcon,6,c	;volatile
   386                           
   387                           ;main.c: 93: INTCONbits.GIE = 1;
   388  0003A0  8EF2               	bsf	intcon,7,c	;volatile
   389                           
   390                           ;main.c: 94: T2CONbits.TMR2ON = 0;
   391  0003A2  94CA               	bcf	4042,2,c	;volatile
   392                           
   393                           ;main.c: 96: spi_init();
   394  0003A4  EC29  F002         	call	_spi_init	;wreg free
   395                           
   396                           ;main.c: 99: tlc_init();
   397  0003A8  ECC9  F000         	call	_tlc_init	;wreg free
   398                           
   399                           ;main.c: 100: tlc_update();
   400  0003AC  EC21  F001         	call	_tlc_update	;wreg free
   401                           
   402                           ;main.c: 102: T2CONbits.TMR2ON = 1;
   403  0003B0  84CA               	bsf	4042,2,c	;volatile
   404  0003B2                     l917:
   405                           
   406                           ;main.c: 104: {
   407                           ;main.c: 105: LATDbits.LD3 = 1;
   408  0003B2  868C               	bsf	3980,3,c	;volatile
   409                           
   410                           ;main.c: 106: delay_sec();
   411  0003B4  ECF6  F001         	call	_delay_sec	;wreg free
   412                           
   413                           ;main.c: 107: LATDbits.LD3 = 0;
   414  0003B8  968C               	bcf	3980,3,c	;volatile
   415                           
   416                           ;main.c: 108: delay_sec();
   417  0003BA  ECF6  F001         	call	_delay_sec	;wreg free
   418                           
   419                           ;main.c: 111: tlc_set(0, 180);
   420  0003BE  0EB4               	movlw	180
   421  0003C0  6E31               	movwf	tlc_set@value,c
   422  0003C2  0E00               	movlw	0
   423  0003C4  EC1C  F002         	call	_tlc_set
   424                           
   425                           ;main.c: 112: tlc_update();
   426  0003C8  EC21  F001         	call	_tlc_update	;wreg free
   427                           
   428                           ;main.c: 114: delay_sec();
   429  0003CC  ECF6  F001         	call	_delay_sec	;wreg free
   430                           
   431                           ;main.c: 115: delay_sec();
   432  0003D0  ECF6  F001         	call	_delay_sec	;wreg free
   433                           
   434                           ;main.c: 116: delay_sec();
   435  0003D4  ECF6  F001         	call	_delay_sec	;wreg free
   436                           
   437                           ;main.c: 117: delay_sec();
   438  0003D8  ECF6  F001         	call	_delay_sec	;wreg free
   439                           
   440                           ;main.c: 121: tlc_servo_temp[0] = 130;
   441  0003DC  0E82               	movlw	130
   442  0003DE  6E11               	movwf	_tlc_servo_temp,c
   443                           
   444                           ;main.c: 122: tlc_sweep(2);
   445  0003E0  0E02               	movlw	2
   446  0003E2  EC0E  F000         	call	_tlc_sweep
   447                           
   448                           ;main.c: 123: delay_sec();
   449  0003E6  ECF6  F001         	call	_delay_sec	;wreg free
   450  0003EA  D7E3               	goto	l917
   451  0003EC                     __end_of_main:
   452                           	opt stack 0
   453                           pclatu	equ	0xFFB
   454                           pclath	equ	0xFFA
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           prodh	equ	0xFF4
   460                           prodl	equ	0xFF3
   461                           intcon	equ	0xFF2
   462                           postinc0	equ	0xFEE
   463                           fsr0h	equ	0xFEA
   464                           fsr0l	equ	0xFE9
   465                           wreg	equ	0xFE8
   466                           fsr1h	equ	0xFE2
   467                           fsr1l	equ	0xFE1
   468                           fsr2h	equ	0xFDA
   469                           fsr2l	equ	0xFD9
   470                           status	equ	0xFD8
   471                           
   472 ;; *************** function _tlc_update *****************
   473 ;; Defined at:
   474 ;;		line 111 in file "tlc5940.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  i               1   19[COMRAM] unsigned char 
   479 ;;  counter         1   18[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;		None               void
   482 ;; Registers used:
   483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   489 ;;      Params:         0       0       0       0       0       0       0
   490 ;;      Locals:         2       0       0       0       0       0       0
   491 ;;      Temps:          3       0       0       0       0       0       0
   492 ;;      Totals:         5       0       0       0       0       0       0
   493 ;;Total ram usage:        5 bytes
   494 ;; Hardware stack levels used:    1
   495 ;; Hardware stack levels required when called:    2
   496 ;; This function calls:
   497 ;;		_serial_send_data
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text1
   504  000242                     __ptext1:
   505                           	opt stack 0
   506  000242                     _tlc_update:
   507                           	opt stack 28
   508                           
   509                           ;tlc5940.c: 114: _delay((unsigned long)((1)*(8000000/4000000.0)));
   510                           
   511                           ;incstack = 0
   512  000242  D000               	nop2		;2 cycle nop
   513                           
   514                           ;tlc5940.c: 117: LATDbits.LD1 = 0;
   515  000244  928C               	bcf	3980,1,c	;volatile
   516                           
   517                           ;tlc5940.c: 118: LATDbits.LD0 = 0;
   518  000246  908C               	bcf	3980,0,c	;volatile
   519                           
   520                           ;tlc5940.c: 119: LATDbits.LD2 = 0;
   521  000248  948C               	bcf	3980,2,c	;volatile
   522                           
   523                           ;tlc5940.c: 121: char counter = 0;
   524  00024A  0E00               	movlw	0
   525  00024C  6E35               	movwf	tlc_update@counter,c
   526                           
   527                           ;tlc5940.c: 122: for(char i = 0; i < 8; i++)
   528  00024E  0E00               	movlw	0
   529  000250  6E36               	movwf	tlc_update@i,c
   530  000252  D03C               	goto	L1
   531  000254                     l791:
   532                           
   533                           ;tlc5940.c: 123: {
   534                           ;tlc5940.c: 124: serial_send_data(tlc_servo[i + counter]>>4);
   535  000254  5035               	movf	tlc_update@counter,w,c
   536  000256  C036  F032         	movff	tlc_update@i,??_tlc_update
   537  00025A  6A33               	clrf	(??_tlc_update+1)& (0+255),c
   538  00025C  2632               	addwf	??_tlc_update,f,c
   539  00025E  0E00               	movlw	0
   540  000260  2233               	addwfc	??_tlc_update+1,f,c
   541  000262  0E01               	movlw	low _tlc_servo
   542  000264  2432               	addwf	??_tlc_update,w,c
   543  000266  6ED9               	movwf	fsr2l,c
   544  000268  0E00               	movlw	high _tlc_servo
   545  00026A  2033               	addwfc	??_tlc_update+1,w,c
   546  00026C  6EDA               	movwf	fsr2h,c
   547  00026E  50DF               	movf	indf2,w,c
   548  000270  6E34               	movwf	(??_tlc_update+2)& (0+255),c
   549  000272  3834               	swapf	??_tlc_update+2,w,c
   550  000274  0B0F               	andlw	15
   551  000276  EC3D  F002         	call	_serial_send_data
   552                           
   553                           ;tlc5940.c: 125: serial_send_data(tlc_servo[i + counter]<<4);
   554  00027A  5035               	movf	tlc_update@counter,w,c
   555  00027C  C036  F032         	movff	tlc_update@i,??_tlc_update
   556  000280  6A33               	clrf	(??_tlc_update+1)& (0+255),c
   557  000282  2632               	addwf	??_tlc_update,f,c
   558  000284  0E00               	movlw	0
   559  000286  2233               	addwfc	??_tlc_update+1,f,c
   560  000288  0E01               	movlw	low _tlc_servo
   561  00028A  2432               	addwf	??_tlc_update,w,c
   562  00028C  6ED9               	movwf	fsr2l,c
   563  00028E  0E00               	movlw	high _tlc_servo
   564  000290  2033               	addwfc	??_tlc_update+1,w,c
   565  000292  6EDA               	movwf	fsr2h,c
   566  000294  50DF               	movf	indf2,w,c
   567  000296  6E34               	movwf	(??_tlc_update+2)& (0+255),c
   568  000298  3834               	swapf	??_tlc_update+2,w,c
   569  00029A  0BF0               	andlw	240
   570  00029C  EC3D  F002         	call	_serial_send_data
   571                           
   572                           ;tlc5940.c: 126: serial_send_data(tlc_servo[i + (counter + 1)]);
   573  0002A0  5036               	movf	tlc_update@i,w,c
   574  0002A2  C035  F032         	movff	tlc_update@counter,??_tlc_update
   575  0002A6  6A33               	clrf	(??_tlc_update+1)& (0+255),c
   576  0002A8  2632               	addwf	??_tlc_update,f,c
   577  0002AA  0E00               	movlw	0
   578  0002AC  2233               	addwfc	??_tlc_update+1,f,c
   579  0002AE  0E01               	movlw	1
   580  0002B0  2632               	addwf	??_tlc_update,f,c
   581  0002B2  0E00               	movlw	0
   582  0002B4  2233               	addwfc	??_tlc_update+1,f,c
   583  0002B6  0E01               	movlw	low _tlc_servo
   584  0002B8  2432               	addwf	??_tlc_update,w,c
   585  0002BA  6ED9               	movwf	fsr2l,c
   586  0002BC  0E00               	movlw	high _tlc_servo
   587  0002BE  2033               	addwfc	??_tlc_update+1,w,c
   588  0002C0  6EDA               	movwf	fsr2h,c
   589  0002C2  50DF               	movf	indf2,w,c
   590  0002C4  EC3D  F002         	call	_serial_send_data
   591                           
   592                           ;tlc5940.c: 127: counter++;
   593  0002C8  2A35               	incf	tlc_update@counter,f,c
   594  0002CA  2A36               	incf	tlc_update@i,f,c
   595  0002CC                     L1:
   596  0002CC  0E07               	movlw	7
   597  0002CE  6436               	cpfsgt	tlc_update@i,c
   598  0002D0  D7C1               	goto	l791
   599                           
   600                           ;tlc5940.c: 128: }
   601                           ;tlc5940.c: 131: _delay((unsigned long)((1)*(8000000/4000000.0)));
   602  0002D2  D000               	nop2		;2 cycle nop
   603                           
   604                           ;tlc5940.c: 132: LATDbits.LD0 = 1;
   605  0002D4  808C               	bsf	3980,0,c	;volatile
   606                           
   607                           ;tlc5940.c: 133: _delay((unsigned long)((1)*(8000000/4000000.0)));
   608  0002D6  D000               	nop2		;2 cycle nop
   609                           
   610                           ;tlc5940.c: 134: LATDbits.LD0 = 0;
   611  0002D8  908C               	bcf	3980,0,c	;volatile
   612                           
   613                           ;tlc5940.c: 135: _delay((unsigned long)((1)*(8000000/4000000.0)));
   614  0002DA  D000               	nop2		;2 cycle nop
   615  0002DC  0012               	return	
   616  0002DE                     __end_of_tlc_update:
   617                           	opt stack 0
   618                           pclatu	equ	0xFFB
   619                           pclath	equ	0xFFA
   620                           tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           prodh	equ	0xFF4
   625                           prodl	equ	0xFF3
   626                           intcon	equ	0xFF2
   627                           postinc0	equ	0xFEE
   628                           fsr0h	equ	0xFEA
   629                           fsr0l	equ	0xFE9
   630                           wreg	equ	0xFE8
   631                           fsr1h	equ	0xFE2
   632                           fsr1l	equ	0xFE1
   633                           indf2	equ	0xFDF
   634                           fsr2h	equ	0xFDA
   635                           fsr2l	equ	0xFD9
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _tlc_sweep *****************
   639 ;; Defined at:
   640 ;;		line 199 in file "tlc5940.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  num_of_incre    1    wreg     unsigned char 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  num_of_incre    1   20[COMRAM] unsigned char 
   645 ;;  i               1   22[COMRAM] unsigned char 
   646 ;;  i               2   23[COMRAM] int 
   647 ;;  counter         1   21[COMRAM] unsigned char 
   648 ;;  j               2   18[COMRAM] int 
   649 ;; Return value:  Size  Location     Type
   650 ;;		None               void
   651 ;; Registers used:
   652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   658 ;;      Params:         0       0       0       0       0       0       0
   659 ;;      Locals:         7       0       0       0       0       0       0
   660 ;;      Temps:          3       0       0       0       0       0       0
   661 ;;      Totals:        10       0       0       0       0       0       0
   662 ;;Total ram usage:       10 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    2
   665 ;; This function calls:
   666 ;;		_serial_send_data
   667 ;; This function is called by:
   668 ;;		_main
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text2
   673  00001C                     __ptext2:
   674                           	opt stack 0
   675  00001C                     _tlc_sweep:
   676                           	opt stack 28
   677                           
   678                           ;incstack = 0
   679                           ;tlc_sweep@num_of_increments stored from wreg
   680  00001C  6E37               	movwf	tlc_sweep@num_of_increments,c
   681                           
   682                           ;tlc5940.c: 205: int j = 0;
   683  00001E  0E00               	movlw	0
   684  000020  6E36               	movwf	tlc_sweep@j+1,c
   685  000022  0E00               	movlw	0
   686  000024  6E35               	movwf	tlc_sweep@j,c
   687                           
   688                           ;tlc5940.c: 206: while(j != 16)
   689  000026  D0AF               	goto	l837
   690  000028                     l803:
   691                           
   692                           ;tlc5940.c: 207: {
   693                           ;tlc5940.c: 209: j = 0;
   694  000028  0E00               	movlw	0
   695  00002A  6E36               	movwf	tlc_sweep@j+1,c
   696  00002C  0E00               	movlw	0
   697  00002E  6E35               	movwf	tlc_sweep@j,c
   698                           
   699                           ;tlc5940.c: 210: for(int i = 0; i < 16; i++)
   700  000030  0E00               	movlw	0
   701  000032  6E3B               	movwf	tlc_sweep@i+1,c
   702  000034  0E00               	movlw	0
   703  000036  6E3A               	movwf	tlc_sweep@i,c
   704  000038  503B               	movf	tlc_sweep@i+1,w,c
   705  00003A  0A80               	xorlw	128
   706  00003C  0F80               	addlw	-128
   707  00003E  0E10               	movlw	16
   708  000040  B4D8               	btfsc	status,2,c
   709  000042  5C3A               	subwf	tlc_sweep@i,w,c
   710  000044  B0D8               	btfsc	status,0,c
   711  000046  D04B               	goto	l41
   712                           
   713                           ;tlc5940.c: 211: {
   714                           ;tlc5940.c: 212: if(tlc_servo_temp[i] != tlc_servo[i])
   715  000048  0E01               	movlw	low _tlc_servo
   716  00004A  243A               	addwf	tlc_sweep@i,w,c
   717  00004C  6ED9               	movwf	fsr2l,c
   718  00004E  0E00               	movlw	high _tlc_servo
   719  000050  203B               	addwfc	tlc_sweep@i+1,w,c
   720  000052  6EDA               	movwf	fsr2h,c
   721  000054  50DF               	movf	indf2,w,c
   722  000056  6E32               	movwf	??_tlc_sweep& (0+255),c
   723  000058  0E11               	movlw	low _tlc_servo_temp
   724  00005A  243A               	addwf	tlc_sweep@i,w,c
   725  00005C  6ED9               	movwf	fsr2l,c
   726  00005E  0E00               	movlw	high _tlc_servo_temp
   727  000060  203B               	addwfc	tlc_sweep@i+1,w,c
   728  000062  6EDA               	movwf	fsr2h,c
   729  000064  50DF               	movf	indf2,w,c
   730  000066  1832               	xorwf	??_tlc_sweep,w,c
   731  000068  B4D8               	btfsc	status,2,c
   732  00006A  D034               	goto	l817
   733                           
   734                           ;tlc5940.c: 213: {
   735                           ;tlc5940.c: 214: if(tlc_servo_temp[i] > tlc_servo[i])
   736  00006C  0E01               	movlw	low _tlc_servo
   737  00006E  243A               	addwf	tlc_sweep@i,w,c
   738  000070  6ED9               	movwf	fsr2l,c
   739  000072  0E00               	movlw	high _tlc_servo
   740  000074  203B               	addwfc	tlc_sweep@i+1,w,c
   741  000076  6EDA               	movwf	fsr2h,c
   742  000078  50DF               	movf	indf2,w,c
   743  00007A  6E32               	movwf	??_tlc_sweep& (0+255),c
   744  00007C  0E11               	movlw	low _tlc_servo_temp
   745  00007E  243A               	addwf	tlc_sweep@i,w,c
   746  000080  6ED9               	movwf	fsr2l,c
   747  000082  0E00               	movlw	high _tlc_servo_temp
   748  000084  203B               	addwfc	tlc_sweep@i+1,w,c
   749  000086  6EDA               	movwf	fsr2h,c
   750  000088  50DF               	movf	indf2,w,c
   751  00008A  5C32               	subwf	??_tlc_sweep,w,c
   752  00008C  B0D8               	btfsc	status,0,c
   753  00008E  D00F               	goto	l815
   754                           
   755                           ;tlc5940.c: 215: {
   756                           ;tlc5940.c: 216: tlc_servo[i] = tlc_servo[i] + num_of_increments;
   757  000090  0E01               	movlw	low _tlc_servo
   758  000092  243A               	addwf	tlc_sweep@i,w,c
   759  000094  6ED9               	movwf	fsr2l,c
   760  000096  0E00               	movlw	high _tlc_servo
   761  000098  203B               	addwfc	tlc_sweep@i+1,w,c
   762  00009A  6EDA               	movwf	fsr2h,c
   763  00009C  0E01               	movlw	low _tlc_servo
   764  00009E  243A               	addwf	tlc_sweep@i,w,c
   765  0000A0  6EE1               	movwf	fsr1l,c
   766  0000A2  0E00               	movlw	high _tlc_servo
   767  0000A4  203B               	addwfc	tlc_sweep@i+1,w,c
   768  0000A6  6EE2               	movwf	fsr1h,c
   769  0000A8  50E7               	movf	indf1,w,c
   770  0000AA  2437               	addwf	tlc_sweep@num_of_increments,w,c
   771  0000AC  D011               	goto	L2
   772  0000AE                     l815:
   773                           
   774                           ;tlc5940.c: 218: else
   775                           ;tlc5940.c: 219: {
   776                           ;tlc5940.c: 220: tlc_servo[i] = tlc_servo[i] - num_of_increments;
   777  0000AE  0E01               	movlw	low _tlc_servo
   778  0000B0  243A               	addwf	tlc_sweep@i,w,c
   779  0000B2  6ED9               	movwf	fsr2l,c
   780  0000B4  0E00               	movlw	high _tlc_servo
   781  0000B6  203B               	addwfc	tlc_sweep@i+1,w,c
   782  0000B8  6EDA               	movwf	fsr2h,c
   783  0000BA  0E01               	movlw	low _tlc_servo
   784  0000BC  243A               	addwf	tlc_sweep@i,w,c
   785  0000BE  6EE1               	movwf	fsr1l,c
   786  0000C0  0E00               	movlw	high _tlc_servo
   787  0000C2  203B               	addwfc	tlc_sweep@i+1,w,c
   788  0000C4  6EE2               	movwf	fsr1h,c
   789  0000C6  50E7               	movf	indf1,w,c
   790  0000C8  6E32               	movwf	??_tlc_sweep& (0+255),c
   791  0000CA  5037               	movf	tlc_sweep@num_of_increments,w,c
   792  0000CC  0800               	sublw	0
   793  0000CE  2432               	addwf	??_tlc_sweep,w,c
   794  0000D0                     L2:
   795  0000D0  6EDF               	movwf	indf2,c
   796  0000D2  D002               	goto	l45
   797  0000D4                     l817:
   798                           
   799                           ;tlc5940.c: 223: else
   800                           ;tlc5940.c: 224: {
   801                           ;tlc5940.c: 225: j++;
   802  0000D4  4A35               	infsnz	tlc_sweep@j,f,c
   803  0000D6  2A36               	incf	tlc_sweep@j+1,f,c
   804  0000D8                     l45:
   805  0000D8  4A3A               	infsnz	tlc_sweep@i,f,c
   806  0000DA  2A3B               	incf	tlc_sweep@i+1,f,c
   807  0000DC  D7AD               	goto	L3
   808  0000DE                     l41:
   809                           
   810                           ;tlc5940.c: 226: }
   811                           ;tlc5940.c: 227: }
   812                           ;tlc5940.c: 230: _delay((unsigned long)((1)*(8000000/4000000.0)));
   813  0000DE  D000               	nop2		;2 cycle nop
   814                           
   815                           ;tlc5940.c: 233: LATDbits.LD1 = 0;
   816  0000E0  928C               	bcf	3980,1,c	;volatile
   817                           
   818                           ;tlc5940.c: 234: LATDbits.LD0 = 0;
   819  0000E2  908C               	bcf	3980,0,c	;volatile
   820                           
   821                           ;tlc5940.c: 235: LATDbits.LD2 = 0;
   822  0000E4  948C               	bcf	3980,2,c	;volatile
   823                           
   824                           ;tlc5940.c: 237: char counter = 0;
   825  0000E6  0E00               	movlw	0
   826  0000E8  6E38               	movwf	tlc_sweep@counter,c
   827                           
   828                           ;tlc5940.c: 238: for(char i = 0; i < 8; i++)
   829  0000EA  0E00               	movlw	0
   830  0000EC  6E39               	movwf	tlc_sweep@i_176,c
   831  0000EE  D03C               	goto	L4
   832  0000F0                     l827:
   833                           
   834                           ;tlc5940.c: 239: {
   835                           ;tlc5940.c: 240: serial_send_data(tlc_servo[i + counter]>>4);
   836  0000F0  5038               	movf	tlc_sweep@counter,w,c
   837  0000F2  C039  F032         	movff	tlc_sweep@i_176,??_tlc_sweep
   838  0000F6  6A33               	clrf	(??_tlc_sweep+1)& (0+255),c
   839  0000F8  2632               	addwf	??_tlc_sweep,f,c
   840  0000FA  0E00               	movlw	0
   841  0000FC  2233               	addwfc	??_tlc_sweep+1,f,c
   842  0000FE  0E01               	movlw	low _tlc_servo
   843  000100  2432               	addwf	??_tlc_sweep,w,c
   844  000102  6ED9               	movwf	fsr2l,c
   845  000104  0E00               	movlw	high _tlc_servo
   846  000106  2033               	addwfc	??_tlc_sweep+1,w,c
   847  000108  6EDA               	movwf	fsr2h,c
   848  00010A  50DF               	movf	indf2,w,c
   849  00010C  6E34               	movwf	(??_tlc_sweep+2)& (0+255),c
   850  00010E  3834               	swapf	??_tlc_sweep+2,w,c
   851  000110  0B0F               	andlw	15
   852  000112  EC3D  F002         	call	_serial_send_data
   853                           
   854                           ;tlc5940.c: 241: serial_send_data(tlc_servo[i + counter]<<4);
   855  000116  5038               	movf	tlc_sweep@counter,w,c
   856  000118  C039  F032         	movff	tlc_sweep@i_176,??_tlc_sweep
   857  00011C  6A33               	clrf	(??_tlc_sweep+1)& (0+255),c
   858  00011E  2632               	addwf	??_tlc_sweep,f,c
   859  000120  0E00               	movlw	0
   860  000122  2233               	addwfc	??_tlc_sweep+1,f,c
   861  000124  0E01               	movlw	low _tlc_servo
   862  000126  2432               	addwf	??_tlc_sweep,w,c
   863  000128  6ED9               	movwf	fsr2l,c
   864  00012A  0E00               	movlw	high _tlc_servo
   865  00012C  2033               	addwfc	??_tlc_sweep+1,w,c
   866  00012E  6EDA               	movwf	fsr2h,c
   867  000130  50DF               	movf	indf2,w,c
   868  000132  6E34               	movwf	(??_tlc_sweep+2)& (0+255),c
   869  000134  3834               	swapf	??_tlc_sweep+2,w,c
   870  000136  0BF0               	andlw	240
   871  000138  EC3D  F002         	call	_serial_send_data
   872                           
   873                           ;tlc5940.c: 242: serial_send_data(tlc_servo[i + (counter + 1)]);
   874  00013C  5039               	movf	tlc_sweep@i_176,w,c
   875  00013E  C038  F032         	movff	tlc_sweep@counter,??_tlc_sweep
   876  000142  6A33               	clrf	(??_tlc_sweep+1)& (0+255),c
   877  000144  2632               	addwf	??_tlc_sweep,f,c
   878  000146  0E00               	movlw	0
   879  000148  2233               	addwfc	??_tlc_sweep+1,f,c
   880  00014A  0E01               	movlw	1
   881  00014C  2632               	addwf	??_tlc_sweep,f,c
   882  00014E  0E00               	movlw	0
   883  000150  2233               	addwfc	??_tlc_sweep+1,f,c
   884  000152  0E01               	movlw	low _tlc_servo
   885  000154  2432               	addwf	??_tlc_sweep,w,c
   886  000156  6ED9               	movwf	fsr2l,c
   887  000158  0E00               	movlw	high _tlc_servo
   888  00015A  2033               	addwfc	??_tlc_sweep+1,w,c
   889  00015C  6EDA               	movwf	fsr2h,c
   890  00015E  50DF               	movf	indf2,w,c
   891  000160  EC3D  F002         	call	_serial_send_data
   892                           
   893                           ;tlc5940.c: 243: counter++;
   894  000164  2A38               	incf	tlc_sweep@counter,f,c
   895  000166  2A39               	incf	tlc_sweep@i_176,f,c
   896  000168                     L4:
   897  000168  0E07               	movlw	7
   898  00016A  6439               	cpfsgt	tlc_sweep@i_176,c
   899  00016C  D7C1               	goto	l827
   900                           
   901                           ;tlc5940.c: 244: }
   902                           ;tlc5940.c: 247: _delay((unsigned long)((1)*(8000000/4000000.0)));
   903  00016E  D000               	nop2		;2 cycle nop
   904                           
   905                           ;tlc5940.c: 248: LATDbits.LD0 = 1;
   906  000170  808C               	bsf	3980,0,c	;volatile
   907                           
   908                           ;tlc5940.c: 249: _delay((unsigned long)((1)*(8000000/4000000.0)));
   909  000172  D000               	nop2		;2 cycle nop
   910                           
   911                           ;tlc5940.c: 250: LATDbits.LD0 = 0;
   912  000174  908C               	bcf	3980,0,c	;volatile
   913                           
   914                           ;tlc5940.c: 251: _delay((unsigned long)((1)*(8000000/4000000.0)));
   915  000176  D000               	nop2		;2 cycle nop
   916                           
   917                           ;tlc5940.c: 255: _delay((unsigned long)((50)*(8000000/4000.0)));
   918  000178  0E82               	movlw	130
   919  00017A  6E32               	movwf	??_tlc_sweep& (0+255),c
   920  00017C  0EDE               	movlw	222
   921  00017E                     u217:
   922  00017E  2EE8               	decfsz	wreg,f,c
   923  000180  D7FE               	goto	u217
   924  000182  2E32               	decfsz	??_tlc_sweep& (0+255),f,c
   925  000184  D7FC               	goto	u217
   926  000186                     l837:
   927  000186  5035               	movf	tlc_sweep@j,w,c
   928  000188  0A10               	xorlw	16
   929  00018A  1036               	iorwf	tlc_sweep@j+1,w,c
   930  00018C  B4D8               	btfsc	status,2,c
   931  00018E  0012               	return	
   932  000190  D74B               	goto	l803
   933  000192                     __end_of_tlc_sweep:
   934                           	opt stack 0
   935                           pclatu	equ	0xFFB
   936                           pclath	equ	0xFFA
   937                           tblptru	equ	0xFF8
   938                           tblptrh	equ	0xFF7
   939                           tblptrl	equ	0xFF6
   940                           tablat	equ	0xFF5
   941                           prodh	equ	0xFF4
   942                           prodl	equ	0xFF3
   943                           intcon	equ	0xFF2
   944                           postinc0	equ	0xFEE
   945                           fsr0h	equ	0xFEA
   946                           fsr0l	equ	0xFE9
   947                           wreg	equ	0xFE8
   948                           indf1	equ	0xFE7
   949                           fsr1h	equ	0xFE2
   950                           fsr1l	equ	0xFE1
   951                           indf2	equ	0xFDF
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _tlc_set *****************
   957 ;; Defined at:
   958 ;;		line 150 in file "tlc5940.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  tlc_servo_nu    1    wreg     unsigned char 
   961 ;;  value           1   14[COMRAM] unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  tlc_servo_nu    1   15[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;		None               void
   966 ;; Registers used:
   967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   973 ;;      Params:         1       0       0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0
   976 ;;      Totals:         2       0       0       0       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text3
   988  000438                     __ptext3:
   989                           	opt stack 0
   990  000438                     _tlc_set:
   991                           	opt stack 29
   992                           
   993                           ;incstack = 0
   994                           ;tlc_set@tlc_servo_number stored from wreg
   995  000438  6E32               	movwf	tlc_set@tlc_servo_number,c
   996                           
   997                           ;tlc5940.c: 152: tlc_servo[tlc_servo_number] = value + 55;
   998  00043A  5032               	movf	tlc_set@tlc_servo_number,w,c
   999  00043C  0D01               	mullw	1
  1000  00043E  0E01               	movlw	low _tlc_servo
  1001  000440  24F3               	addwf	prodl,w,c
  1002  000442  6ED9               	movwf	fsr2l,c
  1003  000444  0E00               	movlw	high _tlc_servo
  1004  000446  20F4               	addwfc	prodh,w,c
  1005  000448  6EDA               	movwf	fsr2h,c
  1006  00044A  5031               	movf	tlc_set@value,w,c
  1007  00044C  0F37               	addlw	55
  1008  00044E  6EDF               	movwf	indf2,c
  1009  000450  0012               	return	
  1010  000452                     __end_of_tlc_set:
  1011                           	opt stack 0
  1012                           pclatu	equ	0xFFB
  1013                           pclath	equ	0xFFA
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           prodh	equ	0xFF4
  1019                           prodl	equ	0xFF3
  1020                           intcon	equ	0xFF2
  1021                           postinc0	equ	0xFEE
  1022                           fsr0h	equ	0xFEA
  1023                           fsr0l	equ	0xFE9
  1024                           wreg	equ	0xFE8
  1025                           indf1	equ	0xFE7
  1026                           fsr1h	equ	0xFE2
  1027                           fsr1l	equ	0xFE1
  1028                           indf2	equ	0xFDF
  1029                           fsr2h	equ	0xFDA
  1030                           fsr2l	equ	0xFD9
  1031                           status	equ	0xFD8
  1032                           
  1033 ;; *************** function _tlc_init *****************
  1034 ;; Defined at:
  1035 ;;		line 36 in file "tlc5940.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  i               1   17[COMRAM] unsigned char 
  1040 ;;  i               1   16[COMRAM] unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;		None               void
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1050 ;;      Params:         0       0       0       0       0       0       0
  1051 ;;      Locals:         2       0       0       0       0       0       0
  1052 ;;      Temps:          1       0       0       0       0       0       0
  1053 ;;      Totals:         3       0       0       0       0       0       0
  1054 ;;Total ram usage:        3 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    2
  1057 ;; This function calls:
  1058 ;;		_serial_send_data
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text4
  1065  000192                     __ptext4:
  1066                           	opt stack 0
  1067  000192                     _tlc_init:
  1068                           	opt stack 28
  1069                           
  1070                           ;tlc5940.c: 39: LATDbits.LD1 = 1;
  1071                           
  1072                           ;incstack = 0
  1073  000192  828C               	bsf	3980,1,c	;volatile
  1074                           
  1075                           ;tlc5940.c: 40: LATDbits.LD0 = 0;
  1076  000194  908C               	bcf	3980,0,c	;volatile
  1077                           
  1078                           ;tlc5940.c: 41: _delay((unsigned long)((2)*(8000000/4000.0)));
  1079  000196  0E06               	movlw	6
  1080  000198  6E32               	movwf	??_tlc_init& (0+255),c
  1081  00019A  0E30               	movlw	48
  1082  00019C                     u227:
  1083  00019C  2EE8               	decfsz	wreg,f,c
  1084  00019E  D7FE               	goto	u227
  1085  0001A0  2E32               	decfsz	??_tlc_init& (0+255),f,c
  1086  0001A2  D7FC               	goto	u227
  1087  0001A4  D000               	nop2	
  1088                           
  1089                           ;tlc5940.c: 44: for(char i = 0; i < 12; i++)
  1090  0001A6  0E00               	movlw	0
  1091  0001A8  6E33               	movwf	tlc_init@i,c
  1092  0001AA  D004               	goto	L5
  1093  0001AC                     l721:
  1094                           
  1095                           ;tlc5940.c: 45: {
  1096                           ;tlc5940.c: 46: serial_send_data(0b11111111);
  1097  0001AC  0EFF               	movlw	255
  1098  0001AE  EC3D  F002         	call	_serial_send_data
  1099  0001B2  2A33               	incf	tlc_init@i,f,c
  1100  0001B4                     L5:
  1101  0001B4  0E0B               	movlw	11
  1102  0001B6  6433               	cpfsgt	tlc_init@i,c
  1103  0001B8  D7F9               	goto	l721
  1104                           
  1105                           ;tlc5940.c: 47: }
  1106                           ;tlc5940.c: 50: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1107  0001BA  D000               	nop2		;2 cycle nop
  1108                           
  1109                           ;tlc5940.c: 51: LATDbits.LD0 = 1;
  1110  0001BC  808C               	bsf	3980,0,c	;volatile
  1111                           
  1112                           ;tlc5940.c: 52: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1113  0001BE  D000               	nop2		;2 cycle nop
  1114                           
  1115                           ;tlc5940.c: 53: LATDbits.LD0 = 0;
  1116  0001C0  908C               	bcf	3980,0,c	;volatile
  1117                           
  1118                           ;tlc5940.c: 54: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1119  0001C2  D000               	nop2		;2 cycle nop
  1120                           
  1121                           ;tlc5940.c: 58: _delay((unsigned long)((2)*(8000000/4000.0)));
  1122  0001C4  0E06               	movlw	6
  1123  0001C6  6E32               	movwf	??_tlc_init& (0+255),c
  1124  0001C8  0E30               	movlw	48
  1125  0001CA                     u237:
  1126  0001CA  2EE8               	decfsz	wreg,f,c
  1127  0001CC  D7FE               	goto	u237
  1128  0001CE  2E32               	decfsz	??_tlc_init& (0+255),f,c
  1129  0001D0  D7FC               	goto	u237
  1130  0001D2  D000               	nop2	
  1131                           
  1132                           ;tlc5940.c: 60: T2CONbits.TMR2ON = 0;
  1133  0001D4  94CA               	bcf	4042,2,c	;volatile
  1134                           
  1135                           ;tlc5940.c: 61: LATDbits.LD1 = 0;
  1136  0001D6  928C               	bcf	3980,1,c	;volatile
  1137                           
  1138                           ;tlc5940.c: 62: LATDbits.LD0 = 0;
  1139  0001D8  908C               	bcf	3980,0,c	;volatile
  1140                           
  1141                           ;tlc5940.c: 63: LATDbits.LD2 = 0;
  1142  0001DA  948C               	bcf	3980,2,c	;volatile
  1143                           
  1144                           ;tlc5940.c: 67: tlc_servo[0] = 235;
  1145  0001DC  0EEB               	movlw	235
  1146  0001DE  6E01               	movwf	_tlc_servo,c
  1147                           
  1148                           ;tlc5940.c: 68: tlc_servo[1] = 0;
  1149  0001E0  0E00               	movlw	0
  1150  0001E2  6E02               	movwf	_tlc_servo+1,c
  1151                           
  1152                           ;tlc5940.c: 69: tlc_servo[2] = 0;
  1153  0001E4  0E00               	movlw	0
  1154  0001E6  6E03               	movwf	_tlc_servo+2,c
  1155                           
  1156                           ;tlc5940.c: 70: tlc_servo[3] = 0;
  1157  0001E8  0E00               	movlw	0
  1158  0001EA  6E04               	movwf	_tlc_servo+3,c
  1159                           
  1160                           ;tlc5940.c: 71: tlc_servo[4] = 0;
  1161  0001EC  0E00               	movlw	0
  1162  0001EE  6E05               	movwf	_tlc_servo+4,c
  1163                           
  1164                           ;tlc5940.c: 72: tlc_servo[5] = 0;
  1165  0001F0  0E00               	movlw	0
  1166  0001F2  6E06               	movwf	_tlc_servo+5,c
  1167                           
  1168                           ;tlc5940.c: 73: tlc_servo[6] = 0;
  1169  0001F4  0E00               	movlw	0
  1170  0001F6  6E07               	movwf	_tlc_servo+6,c
  1171                           
  1172                           ;tlc5940.c: 74: tlc_servo[7] = 0;
  1173  0001F8  0E00               	movlw	0
  1174  0001FA  6E08               	movwf	_tlc_servo+7,c
  1175                           
  1176                           ;tlc5940.c: 75: tlc_servo[8] = 0;
  1177  0001FC  0E00               	movlw	0
  1178  0001FE  6E09               	movwf	_tlc_servo+8,c
  1179                           
  1180                           ;tlc5940.c: 76: tlc_servo[9] = 0;
  1181  000200  0E00               	movlw	0
  1182  000202  6E0A               	movwf	_tlc_servo+9,c
  1183                           
  1184                           ;tlc5940.c: 77: tlc_servo[10] = 0;
  1185  000204  0E00               	movlw	0
  1186  000206  6E0B               	movwf	_tlc_servo+10,c
  1187                           
  1188                           ;tlc5940.c: 78: tlc_servo[11] = 0;
  1189  000208  0E00               	movlw	0
  1190  00020A  6E0C               	movwf	_tlc_servo+11,c
  1191                           
  1192                           ;tlc5940.c: 79: tlc_servo[12] = 0;
  1193  00020C  0E00               	movlw	0
  1194  00020E  6E0D               	movwf	_tlc_servo+12,c
  1195                           
  1196                           ;tlc5940.c: 80: tlc_servo[13] = 0;
  1197  000210  0E00               	movlw	0
  1198  000212  6E0E               	movwf	_tlc_servo+13,c
  1199                           
  1200                           ;tlc5940.c: 81: tlc_servo[14] = 0;
  1201  000214  0E00               	movlw	0
  1202  000216  6E0F               	movwf	_tlc_servo+14,c
  1203                           
  1204                           ;tlc5940.c: 82: tlc_servo[15] = 0;
  1205  000218  0E00               	movlw	0
  1206  00021A  6E10               	movwf	_tlc_servo+15,c
  1207                           
  1208                           ;tlc5940.c: 85: for(char i = 0; i < 24; i++)
  1209  00021C  0E00               	movlw	0
  1210  00021E  6E34               	movwf	tlc_init@i_159,c
  1211  000220  D004               	goto	L6
  1212  000222                     l775:
  1213                           
  1214                           ;tlc5940.c: 86: {
  1215                           ;tlc5940.c: 87: serial_send_data(0b00000000);
  1216  000222  0E00               	movlw	0
  1217  000224  EC3D  F002         	call	_serial_send_data
  1218  000228  2A34               	incf	tlc_init@i_159,f,c
  1219  00022A                     L6:
  1220  00022A  0E17               	movlw	23
  1221  00022C  6434               	cpfsgt	tlc_init@i_159,c
  1222  00022E  D7F9               	goto	l775
  1223                           
  1224                           ;tlc5940.c: 88: }
  1225                           ;tlc5940.c: 91: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1226  000230  D000               	nop2		;2 cycle nop
  1227                           
  1228                           ;tlc5940.c: 92: LATDbits.LD0 = 1;
  1229  000232  808C               	bsf	3980,0,c	;volatile
  1230                           
  1231                           ;tlc5940.c: 93: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1232  000234  D000               	nop2		;2 cycle nop
  1233                           
  1234                           ;tlc5940.c: 94: LATDbits.LD0 = 0;
  1235  000236  908C               	bcf	3980,0,c	;volatile
  1236                           
  1237                           ;tlc5940.c: 95: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1238  000238  D000               	nop2		;2 cycle nop
  1239                           
  1240                           ;tlc5940.c: 97: serial_send_data(0b10000000);
  1241  00023A  0E80               	movlw	128
  1242  00023C  EC3D  F002         	call	_serial_send_data
  1243  000240  0012               	return	
  1244  000242                     __end_of_tlc_init:
  1245                           	opt stack 0
  1246                           pclatu	equ	0xFFB
  1247                           pclath	equ	0xFFA
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           prodh	equ	0xFF4
  1253                           prodl	equ	0xFF3
  1254                           intcon	equ	0xFF2
  1255                           postinc0	equ	0xFEE
  1256                           fsr0h	equ	0xFEA
  1257                           fsr0l	equ	0xFE9
  1258                           wreg	equ	0xFE8
  1259                           indf1	equ	0xFE7
  1260                           fsr1h	equ	0xFE2
  1261                           fsr1l	equ	0xFE1
  1262                           indf2	equ	0xFDF
  1263                           fsr2h	equ	0xFDA
  1264                           fsr2l	equ	0xFD9
  1265                           status	equ	0xFD8
  1266                           
  1267 ;; *************** function _serial_send_data *****************
  1268 ;; Defined at:
  1269 ;;		line 19 in file "tlc5940.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  data            1    wreg     unsigned char 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  data            1   14[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;		None               void
  1276 ;; Registers used:
  1277 ;;		wreg
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1283 ;;      Params:         0       0       0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0
  1286 ;;      Totals:         1       0       0       0       0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_tlc_init
  1294 ;;		_tlc_update
  1295 ;;		_tlc_sweep
  1296 ;;		_tlc_write
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text5
  1301  00047A                     __ptext5:
  1302                           	opt stack 0
  1303  00047A                     _serial_send_data:
  1304                           	opt stack 28
  1305                           
  1306                           ;incstack = 0
  1307                           ;serial_send_data@data stored from wreg
  1308  00047A  6E31               	movwf	serial_send_data@data,c
  1309                           
  1310                           ;tlc5940.c: 21: SSPBUF = data;
  1311  00047C  C031  FFC9         	movff	serial_send_data@data,4041	;volatile
  1312                           
  1313                           ;tlc5940.c: 23: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1314  000480  D000               	nop2		;2 cycle nop
  1315  000482  0012               	return	
  1316  000484                     __end_of_serial_send_data:
  1317                           	opt stack 0
  1318                           pclatu	equ	0xFFB
  1319                           pclath	equ	0xFFA
  1320                           tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           prodh	equ	0xFF4
  1325                           prodl	equ	0xFF3
  1326                           intcon	equ	0xFF2
  1327                           postinc0	equ	0xFEE
  1328                           fsr0h	equ	0xFEA
  1329                           fsr0l	equ	0xFE9
  1330                           wreg	equ	0xFE8
  1331                           indf1	equ	0xFE7
  1332                           fsr1h	equ	0xFE2
  1333                           fsr1l	equ	0xFE1
  1334                           indf2	equ	0xFDF
  1335                           fsr2h	equ	0xFDA
  1336                           fsr2l	equ	0xFD9
  1337                           status	equ	0xFD8
  1338                           
  1339 ;; *************** function _spi_init *****************
  1340 ;; Defined at:
  1341 ;;		line 50 in file "main.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;		None               void
  1348 ;; Registers used:
  1349 ;;		None
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1355 ;;      Params:         0       0       0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text6
  1370  000452                     __ptext6:
  1371                           	opt stack 0
  1372  000452                     _spi_init:
  1373                           	opt stack 29
  1374                           
  1375                           ;main.c: 52: SSPSTATbits.SMP = 0;
  1376                           
  1377                           ;incstack = 0
  1378  000452  9EC7               	bcf	4039,7,c	;volatile
  1379                           
  1380                           ;main.c: 53: SSPSTATbits.CKE = 1;
  1381  000454  8CC7               	bsf	4039,6,c	;volatile
  1382                           
  1383                           ;main.c: 54: SSPCON1bits.CKP = 0;
  1384  000456  98C6               	bcf	4038,4,c	;volatile
  1385                           
  1386                           ;main.c: 55: SSPCON1bits.SSPM0 = 0;
  1387  000458  90C6               	bcf	4038,0,c	;volatile
  1388                           
  1389                           ;main.c: 56: SSPCON1bits.SSPM1 = 0;
  1390  00045A  92C6               	bcf	4038,1,c	;volatile
  1391                           
  1392                           ;main.c: 57: SSPCON1bits.SSPM2 = 0;
  1393  00045C  94C6               	bcf	4038,2,c	;volatile
  1394                           
  1395                           ;main.c: 58: SSPCON1bits.SSPM3 = 0;
  1396  00045E  96C6               	bcf	4038,3,c	;volatile
  1397                           
  1398                           ;main.c: 59: SSPCON1bits.SSPEN = 1;
  1399  000460  8AC6               	bsf	4038,5,c	;volatile
  1400                           
  1401                           ;main.c: 61: TRISCbits.RC5 = 0;
  1402  000462  9A94               	bcf	3988,5,c	;volatile
  1403                           
  1404                           ;main.c: 62: TRISCbits.RC3 = 0;
  1405  000464  9694               	bcf	3988,3,c	;volatile
  1406  000466  0012               	return	
  1407  000468                     __end_of_spi_init:
  1408                           	opt stack 0
  1409                           pclatu	equ	0xFFB
  1410                           pclath	equ	0xFFA
  1411                           tblptru	equ	0xFF8
  1412                           tblptrh	equ	0xFF7
  1413                           tblptrl	equ	0xFF6
  1414                           tablat	equ	0xFF5
  1415                           prodh	equ	0xFF4
  1416                           prodl	equ	0xFF3
  1417                           intcon	equ	0xFF2
  1418                           postinc0	equ	0xFEE
  1419                           fsr0h	equ	0xFEA
  1420                           fsr0l	equ	0xFE9
  1421                           wreg	equ	0xFE8
  1422                           indf1	equ	0xFE7
  1423                           fsr1h	equ	0xFE2
  1424                           fsr1l	equ	0xFE1
  1425                           indf2	equ	0xFDF
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _delay_sec *****************
  1431 ;; Defined at:
  1432 ;;		line 26 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  i               2   15[COMRAM] int 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;		None               void
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1446 ;;      Params:         0       0       0       0       0       0       0
  1447 ;;      Locals:         2       0       0       0       0       0       0
  1448 ;;      Temps:          1       0       0       0       0       0       0
  1449 ;;      Totals:         3       0       0       0       0       0       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text7
  1461  0003EC                     __ptext7:
  1462                           	opt stack 0
  1463  0003EC                     _delay_sec:
  1464                           	opt stack 29
  1465                           
  1466                           ;main.c: 28: for(int i = 0; i < 50; i++)
  1467                           
  1468                           ;incstack = 0
  1469  0003EC  0E00               	movlw	0
  1470  0003EE  6E33               	movwf	delay_sec@i+1,c
  1471  0003F0  0E00               	movlw	0
  1472  0003F2  6E32               	movwf	delay_sec@i,c
  1473  0003F4  5033               	movf	delay_sec@i+1,w,c
  1474  0003F6  0A80               	xorlw	128
  1475  0003F8  0F80               	addlw	-128
  1476  0003FA  0E32               	movlw	50
  1477  0003FC  B4D8               	btfsc	status,2,c
  1478  0003FE  5C32               	subwf	delay_sec@i,w,c
  1479  000400  B0D8               	btfsc	status,0,c
  1480  000402  D00B               	goto	l114
  1481                           
  1482                           ;main.c: 29: {
  1483                           ;main.c: 30: _delay((unsigned long)((10)*(8000000/4000.0)));
  1484  000404  0E1A               	movlw	26
  1485  000406  6E31               	movwf	??_delay_sec& (0+255),c
  1486  000408  0EF8               	movlw	248
  1487  00040A                     u247:
  1488  00040A  2EE8               	decfsz	wreg,f,c
  1489  00040C  D7FE               	goto	u247
  1490  00040E  2E31               	decfsz	??_delay_sec& (0+255),f,c
  1491  000410  D7FC               	goto	u247
  1492  000412  D000               	nop2	
  1493  000414  4A32               	infsnz	delay_sec@i,f,c
  1494  000416  2A33               	incf	delay_sec@i+1,f,c
  1495  000418  D7ED               	goto	L7
  1496  00041A                     l114:
  1497  00041A  0012               	return	
  1498  00041C                     __end_of_delay_sec:
  1499                           	opt stack 0
  1500                           pclatu	equ	0xFFB
  1501                           pclath	equ	0xFFA
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           prodh	equ	0xFF4
  1507                           prodl	equ	0xFF3
  1508                           intcon	equ	0xFF2
  1509                           postinc0	equ	0xFEE
  1510                           fsr0h	equ	0xFEA
  1511                           fsr0l	equ	0xFE9
  1512                           wreg	equ	0xFE8
  1513                           indf1	equ	0xFE7
  1514                           fsr1h	equ	0xFE2
  1515                           fsr1l	equ	0xFE1
  1516                           indf2	equ	0xFDF
  1517                           fsr2h	equ	0xFDA
  1518                           fsr2l	equ	0xFD9
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _TMR2_init *****************
  1522 ;; Defined at:
  1523 ;;		line 65 in file "main.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;		None               void
  1530 ;; Registers used:
  1531 ;;		wreg, status,2
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1537 ;;      Params:         0       0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text8
  1552  00041C                     __ptext8:
  1553                           	opt stack 0
  1554  00041C                     _TMR2_init:
  1555                           	opt stack 29
  1556                           
  1557                           ;main.c: 68: PR2 = 0b00000100;
  1558                           
  1559                           ;incstack = 0
  1560  00041C  0E04               	movlw	4
  1561  00041E  6ECB               	movwf	4043,c	;volatile
  1562                           
  1563                           ;main.c: 69: T2CON = 0b01111101;
  1564  000420  0E7D               	movlw	125
  1565  000422  6ECA               	movwf	4042,c	;volatile
  1566                           
  1567                           ;main.c: 70: CCPR1L = 0b00000010;
  1568  000424  0E02               	movlw	2
  1569  000426  6EBE               	movwf	4030,c	;volatile
  1570                           
  1571                           ;main.c: 71: CCP1CON = 0b00101100;
  1572  000428  0E2C               	movlw	44
  1573  00042A  6EBD               	movwf	4029,c	;volatile
  1574                           
  1575                           ;main.c: 72: TRISC = 0b00000000;
  1576  00042C  0E00               	movlw	0
  1577  00042E  6E94               	movwf	3988,c	;volatile
  1578                           
  1579                           ;main.c: 73: PORTC = 0b00000000;
  1580  000430  0E00               	movlw	0
  1581  000432  6E82               	movwf	3970,c	;volatile
  1582                           
  1583                           ;main.c: 74: T2CONbits.TMR2ON = 0;
  1584  000434  94CA               	bcf	4042,2,c	;volatile
  1585  000436  0012               	return	
  1586  000438                     __end_of_TMR2_init:
  1587                           	opt stack 0
  1588                           pclatu	equ	0xFFB
  1589                           pclath	equ	0xFFA
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           prodh	equ	0xFF4
  1595                           prodl	equ	0xFF3
  1596                           intcon	equ	0xFF2
  1597                           postinc0	equ	0xFEE
  1598                           fsr0h	equ	0xFEA
  1599                           fsr0l	equ	0xFE9
  1600                           wreg	equ	0xFE8
  1601                           indf1	equ	0xFE7
  1602                           fsr1h	equ	0xFE2
  1603                           fsr1l	equ	0xFE1
  1604                           indf2	equ	0xFDF
  1605                           fsr2h	equ	0xFDA
  1606                           fsr2l	equ	0xFD9
  1607                           status	equ	0xFD8
  1608                           
  1609 ;; *************** function _blank_pulse *****************
  1610 ;; Defined at:
  1611 ;;		line 34 in file "main.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;		None               void
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:         14       0       0       0       0       0       0
  1628 ;;      Totals:        14       0       0       0       0       0       0
  1629 ;;Total ram usage:       14 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		Interrupt level 2
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	intcode
  1639  000008                     __pintcode:
  1640                           	opt stack 0
  1641  000008                     _blank_pulse:
  1642                           	opt stack 28
  1643                           
  1644                           ;incstack = 0
  1645  000008  CFFA F023          	movff	pclath,??_blank_pulse
  1646  00000C  CFFB F024          	movff	pclatu,??_blank_pulse+1
  1647  000010  CFE9 F025          	movff	fsr0l,??_blank_pulse+2
  1648  000014  ED6F  F001         	call	int_func,f	;refresh shadow registers
  1649                           pclatu	equ	0xFFB
  1650                           pclath	equ	0xFFA
  1651                           tblptru	equ	0xFF8
  1652                           tblptrh	equ	0xFF7
  1653                           tblptrl	equ	0xFF6
  1654                           tablat	equ	0xFF5
  1655                           prodh	equ	0xFF4
  1656                           prodl	equ	0xFF3
  1657                           intcon	equ	0xFF2
  1658                           postinc0	equ	0xFEE
  1659                           fsr0h	equ	0xFEA
  1660                           fsr0l	equ	0xFE9
  1661                           wreg	equ	0xFE8
  1662                           indf1	equ	0xFE7
  1663                           fsr1h	equ	0xFE2
  1664                           fsr1l	equ	0xFE1
  1665                           indf2	equ	0xFDF
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           pclatu	equ	0xFFB
  1670                           pclath	equ	0xFFA
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           prodh	equ	0xFF4
  1676                           prodl	equ	0xFF3
  1677                           intcon	equ	0xFF2
  1678                           postinc0	equ	0xFEE
  1679                           fsr0h	equ	0xFEA
  1680                           fsr0l	equ	0xFE9
  1681                           wreg	equ	0xFE8
  1682                           indf1	equ	0xFE7
  1683                           fsr1h	equ	0xFE2
  1684                           fsr1l	equ	0xFE1
  1685                           indf2	equ	0xFDF
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690                           	psect	rparam
  1691  0000                     pclatu	equ	0xFFB
  1692                           pclath	equ	0xFFA
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           intcon	equ	0xFF2
  1700                           postinc0	equ	0xFEE
  1701                           fsr0h	equ	0xFEA
  1702                           fsr0l	equ	0xFE9
  1703                           wreg	equ	0xFE8
  1704                           indf1	equ	0xFE7
  1705                           fsr1h	equ	0xFE2
  1706                           fsr1l	equ	0xFE1
  1707                           indf2	equ	0xFDF
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     25      59
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_tlc_sweep
    _tlc_update->_serial_send_data
    _tlc_sweep->_serial_send_data
    _tlc_init->_serial_send_data

Critical Paths under _blank_pulse in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _blank_pulse in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _blank_pulse in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _blank_pulse in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _blank_pulse in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _blank_pulse in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _blank_pulse in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     634
                          _TMR2_init
                          _delay_sec
                           _spi_init
                           _tlc_init
                            _tlc_set
                          _tlc_sweep
                         _tlc_update
 ---------------------------------------------------------------------------------
 (1) _tlc_update                                           5     5      0     135
                                             15 COMRAM     5     5      0
                   _serial_send_data
 ---------------------------------------------------------------------------------
 (1) _tlc_sweep                                           10    10      0     330
                                             15 COMRAM    10    10      0
                   _serial_send_data
 ---------------------------------------------------------------------------------
 (1) _tlc_set                                              2     1      1      64
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _tlc_init                                             3     3      0      75
                                             15 COMRAM     3     3      0
                   _serial_send_data
 ---------------------------------------------------------------------------------
 (2) _serial_send_data                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_sec                                            3     3      0      30
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _blank_pulse                                         14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR2_init
   _delay_sec
   _spi_init
   _tlc_init
     _serial_send_data
   _tlc_set
   _tlc_sweep
     _serial_send_data
   _tlc_update
     _serial_send_data

 _blank_pulse (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     19      3B       1       46.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      15        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Jun 28 04:20:21 2014

               _SSPSTATbits 000FC7                          l41 00DE                          l45 00D8  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                 __CFG_OSC$HS 000000                         l114 041A  
                       l721 01AC                         l803 0028                         l815 00AE  
                       l817 00D4                         l827 00F0                         l837 0186  
                       l917 03B2                         l775 0222                         l791 0254  
                       u217 017E                         u227 019C                         u237 01CA  
                       _PR2 000FCB                         u247 040A                         prod 000FF3  
                       wreg 000FE8                __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000  
                      _main 0370                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        indf1 000FE7  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 0018            tlc_sweep@counter 0038               __CFG_MCLRE$ON 000000  
      serial_send_data@data 0031                       ?_main 0023                       _T2CON 000FCA  
                     i2l119 0336                       i2l891 0330                       _PORTA 000F80  
                     _PORTB 000F81                       _PORTC 000F82                       _PORTD 000F83  
                     _PORTE 000F84                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
             __CFG_PWRT$OFF 000000                       _count 0021          __size_of_TMR2_init 001C  
            __CFG_BOREN$OFF 000000                       tablat 000FF5             __end_of_tlc_set 0452  
                     status 000FD8        __size_of_blank_pulse 0368             __initialization 0468  
              __end_of_main 03EC                      ??_main 003C               __activetblptr 000000  
                    _CCPR1L 000FBE                      _SSPBUF 000FC9    __end_of_serial_send_data 0484  
         __end_of_TMR2_init 0438                      clear_0 046E            __end_of_tlc_init 0242  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
          __end_of_spi_init 0468                   ??_tlc_set 0032                  __accesstop 0080  
   __end_of__initialization 0474              __pcstackCOMRAM 0023          __size_of_delay_sec 0030  
   tlc_set@tlc_servo_number 0032                     _CCP1CON 000FBD          __size_of_tlc_sweep 0176  
         __end_of_delay_sec 041C                     __Hparam 0000                     __Lparam 0000  
                 ?_tlc_init 0023                   ?_spi_init 0023                     __pcinit 0468  
                   __ramtop 0600                     __ptext0 0370                     __ptext1 0242  
                   __ptext2 001C                     __ptext3 0438                     __ptext4 0192  
                   __ptext5 047A                     __ptext6 0452                     __ptext7 03EC  
                   __ptext8 041C                   _T2CONbits 000FCA                     _tlc_set 0438  
            __pintcode_body 02DE        end_of_initialization 0474                  delay_sec@i 0032  
             ??_blank_pulse 0023                     int_func 02DE           ?_serial_send_data 0023  
         __end_of_tlc_sweep 0192          ??_serial_send_data 0031                  ??_tlc_init 0032  
               tlc_update@i 0036                  ??_spi_init 0031                     postinc0 000FEE  
                _tlc_update 0242                   _TMR2_init 041C                   _TRISCbits 000F94  
       __end_of_blank_pulse 0370                  ?_TMR2_init 0023         start_initialization 0468  
            _tlc_servo_temp 0011                 ?_tlc_update 0023                 __pbssCOMRAM 0001  
               _blank_pulse 0008                   _delay_sec 03EC                   __pintcode 0008  
         __size_of_tlc_init 00B0           __size_of_spi_init 0016                 ??_TMR2_init 0031  
                  ?_tlc_set 0031         __size_of_tlc_update 009C                    _LATDbits 000F8C  
                  _PIE1bits 000F9D                  ?_delay_sec 0023                    _PIR1bits 000F9E  
                tlc_sweep@i 003A                  tlc_sweep@j 0035                   _tlc_servo 0001  
                 _tlc_sweep 001C   __size_of_serial_send_data 000A              tlc_sweep@i_176 0039  
             tlc_init@i_159 0034                    __Hrparam 0000                    __Lrparam 0000  
                ?_tlc_sweep 0023            __size_of_tlc_set 001A               __size_of_main 007C  
                 tlc_init@i 0033                 ??_delay_sec 0031                    _tlc_init 0192  
                  _spi_init 0452                ??_tlc_update 0032                  _INTCONbits 000FF2  
tlc_sweep@num_of_increments 0037                tlc_set@value 0031                    intlevel2 0000  
        __end_of_tlc_update 02DE                ?_blank_pulse 0023           tlc_update@counter 0035  
               ??_tlc_sweep 0032            _serial_send_data 047A                 _SSPCON1bits 000FC6  
